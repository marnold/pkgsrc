$NetBSD: patch-aa,v 1.1.1.1 2009/09/11 15:09:35 tonio Exp $

Fix sh portability

--- configure.orig	2009-09-10 22:50:15.000000000 +0200
+++ configure
@@ -2170,7 +2170,7 @@ echo $ECHO_N "ocaml version is $OCAMLVER
 case $OCAMLVERSION in
   3.0*) echo "${ECHO_T}Incompatible version! Use at least OCaml 3.10.1."; exit 2;;
   3.10.0) echo "${ECHO_T}Warning: unsupported version." ;
-         if test "$UNSUPPORTED_OCAML" == "yes"; then
+         if test "$UNSUPPORTED_OCAML" = "yes"; then
            echo "Compile at your own risks";
          else
            echo "If you want to compile Frama-C with this version, use the \
@@ -2621,7 +2621,7 @@ as_val=`eval 'as_val=${'$as_ac_File'}
 fi
 
 
-if test "$OCAMLGRAPH_EXISTS" == "no"; then
+if test "$OCAMLGRAPH_EXISTS" = "no"; then
    OCAMLGRAPH_TEST=$OCAMLLIB
    OCAMLGRAPH=
    as_ac_File=`$as_echo "ac_cv_file_$OCAMLGRAPH_HOME/graph.$OBJ_SUFFIX" | $as_tr_sh`
@@ -2653,7 +2653,7 @@ fi
 fi
 
 # Is the installed version compatible?
-if test "$OCAMLGRAPH_EXISTS" == "yes"; then
+if test "$OCAMLGRAPH_EXISTS" = "yes"; then
  test_ocamlgraph_version='print_string Graph.Version.version;;'
  echo $test_ocamlgraph_version > test_ocamlgraph.ml
  if ocamlc -o test_ocamlgraph $OCAMLGRAPH graph.cmo test_ocamlgraph.ml 2> /dev/null; then
@@ -2676,7 +2676,7 @@ fi
 
 #revert back to local version of ocamlgraph
 
-if test "$OCAMLGRAPH_EXISTS" == "no"; then
+if test "$OCAMLGRAPH_EXISTS" = "no"; then
    { $as_echo "$as_me:$LINENO: Switching to local ocamlgraph" >&5
 $as_echo "$as_me: Switching to local ocamlgraph" >&6;}
    OCAMLGRAPH_LOCAL=ocamlgraph
@@ -2711,7 +2711,7 @@ as_val=`eval 'as_val=${'$as_ac_File'}
 fi
 
 
-   if test "$OCAMLGRAPH_EXISTS" == "no"; then
+   if test "$OCAMLGRAPH_EXISTS" = "no"; then
     { $as_echo "$as_me:$LINENO: checking for ocamlgraph.tar.gz" >&5
 $as_echo_n "checking for ocamlgraph.tar.gz... " >&6; }
 if test "${ac_cv_file_ocamlgraph_tar_gz+set}" = set; then
@@ -2733,7 +2733,7 @@ if test "x$ac_cv_file_ocamlgraph_tar_gz"
   OCAMLGRAPH_EXISTS=yes
 fi
 
-    if test "$OCAMLGRAPH_EXISTS" == "yes"; then
+    if test "$OCAMLGRAPH_EXISTS" = "yes"; then
          { $as_echo "$as_me:$LINENO: Unarchiving ocamlgraph.tar.gz" >&5
 $as_echo "$as_me: Unarchiving ocamlgraph.tar.gz" >&6;}
          tar zxf ocamlgraph.tar.gz
@@ -2760,7 +2760,7 @@ if test "x$ac_cv_file_ocamlgraph_tar_gz"
   OCAMLGRAPH_TAR=yes
 fi
 
-    if test "$OCAMLGRAPH_TAR" == "yes"; then
+    if test "$OCAMLGRAPH_TAR" = "yes"; then
      if test ocamlgraph.tar.gz -nt ocamlgraph; then
        rm -rf ocamlgraph
        { $as_echo "$as_me:$LINENO: ocamlgraph updated" >&5
@@ -2770,7 +2770,7 @@ $as_echo "$as_me: ocamlgraph updated" >&
     fi
    fi
 
-   if test "$OCAMLGRAPH_EXISTS" == "no"; then
+   if test "$OCAMLGRAPH_EXISTS" = "no"; then
       { { $as_echo "$as_me:$LINENO: error: Cannot find $OCAMLGRAPH_LOCAL in current directory
       Please download the latest version from http://ocamlgraph.lri.fr/download
       Compile it in \"ocamlgraph\" then rerun ./configure" >&5
@@ -5310,7 +5310,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: constant_propagation is not available" >&5
 $as_echo "$as_me: error: constant_propagation is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5323,7 +5323,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=constant_propagation
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5332,7 +5332,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} constant_propagation"
   eval DYNAMIC_$up=yes
 else
@@ -5404,7 +5404,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: from is not available" >&5
 $as_echo "$as_me: error: from is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5417,7 +5417,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=from
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5426,7 +5426,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} from"
   eval DYNAMIC_$up=yes
 else
@@ -5498,7 +5498,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: gui is not available" >&5
 $as_echo "$as_me: error: gui is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5511,7 +5511,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=gui
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5520,7 +5520,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} gui"
   eval DYNAMIC_$up=yes
 else
@@ -5530,7 +5530,7 @@ fi
 echo "gui... $ENABLE"
 
 
-if test "$ENABLE_GUI" == "yes"; then
+if test "$ENABLE_GUI" = "yes"; then
   REQUIRE_LABLGTK=${REQUIRE_LABLGTK}" gui"
 fi
 
@@ -5596,7 +5596,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: impact is not available" >&5
 $as_echo "$as_me: error: impact is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5609,7 +5609,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=impact
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5618,7 +5618,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} impact"
   eval DYNAMIC_$up=yes
 else
@@ -5690,7 +5690,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: inout is not available" >&5
 $as_echo "$as_me: error: inout is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5703,7 +5703,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=inout
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5712,7 +5712,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} inout"
   eval DYNAMIC_$up=yes
 else
@@ -5784,7 +5784,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: jessie is not available" >&5
 $as_echo "$as_me: error: jessie is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5797,7 +5797,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=jessie
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5815,7 +5815,7 @@ fi
 
 
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} jessie"
   eval DYNAMIC_$up=yes
 else
@@ -5825,7 +5825,7 @@ fi
 echo "jessie... $ENABLE"
 
 
-if test "$ENABLE_JESSIE" == "yes"; then
+if test "$ENABLE_JESSIE" = "yes"; then
   REQUIRE_WHYJC=${REQUIRE_WHYJC}" jessie"
   USE_APRON=${USE_APRON}" jessie"
 fi
@@ -5892,7 +5892,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: ltl_to_acsl is not available" >&5
 $as_echo "$as_me: error: ltl_to_acsl is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -5905,7 +5905,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=ltl_to_acsl
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -5923,7 +5923,7 @@ fi
 
 
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} ltl_to_acsl"
   eval DYNAMIC_$up=yes
 else
@@ -5932,7 +5932,7 @@ fi
 
 echo "ltl_to_acsl... $ENABLE"
 
-if test "$ENABLE_LTL_TO_ACSL" == "yes"; then
+if test "$ENABLE_LTL_TO_ACSL" = "yes"; then
    USE_LTLTOBA=${USE_LTLTOBA}" ltl_to_acsl"
 fi
 
@@ -5998,7 +5998,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: metrics is not available" >&5
 $as_echo "$as_me: error: metrics is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6011,7 +6011,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=metrics
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6020,7 +6020,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} metrics"
   eval DYNAMIC_$up=yes
 else
@@ -6092,7 +6092,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: miel is not available" >&5
 $as_echo "$as_me: error: miel is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6105,7 +6105,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=miel
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6114,7 +6114,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} miel"
   eval DYNAMIC_$up=yes
 else
@@ -6124,7 +6124,7 @@ fi
 echo "miel... $ENABLE"
 
 
-if test "$ENABLE_MIEL" == "yes" -a "$ENABLE_GUI" == "yes"; then
+if test "$ENABLE_MIEL" = "yes" -a "$ENABLE_GUI" = "yes"; then
   REQUIRE_LABLGTK=${REQUIRE_LABLGTK}" miel"
   REQUIRE_LABLGLADECC=${REQUIRE_LABLGLADECC}" miel"
 fi
@@ -6191,7 +6191,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: occurrence is not available" >&5
 $as_echo "$as_me: error: occurrence is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6204,7 +6204,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=occurrence
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6213,7 +6213,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} occurrence"
   eval DYNAMIC_$up=yes
 else
@@ -6289,7 +6289,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: pdg is not available" >&5
 $as_echo "$as_me: error: pdg is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6302,7 +6302,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=pdg
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6311,7 +6311,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} pdg"
   eval DYNAMIC_$up=yes
 else
@@ -6383,7 +6383,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: postdominators is not available" >&5
 $as_echo "$as_me: error: postdominators is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6396,7 +6396,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=postdominators
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6405,7 +6405,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} postdominators"
   eval DYNAMIC_$up=yes
 else
@@ -6477,7 +6477,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: scope is not available" >&5
 $as_echo "$as_me: error: scope is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6490,7 +6490,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=scope
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6499,7 +6499,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} scope"
   eval DYNAMIC_$up=yes
 else
@@ -6571,7 +6571,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: security is not available" >&5
 $as_echo "$as_me: error: security is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6584,7 +6584,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=security
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6593,7 +6593,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} security"
   eval DYNAMIC_$up=yes
 else
@@ -6665,7 +6665,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: semantic_callgraph is not available" >&5
 $as_echo "$as_me: error: semantic_callgraph is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6678,7 +6678,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=semantic_callgraph
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6687,7 +6687,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} semantic_callgraph"
   eval DYNAMIC_$up=yes
 else
@@ -6759,7 +6759,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: slicing is not available" >&5
 $as_echo "$as_me: error: slicing is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6772,7 +6772,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=slicing
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6781,7 +6781,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} slicing"
   eval DYNAMIC_$up=yes
 else
@@ -6853,7 +6853,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: sparecode is not available" >&5
 $as_echo "$as_me: error: sparecode is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6866,7 +6866,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=sparecode
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6875,7 +6875,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} sparecode"
   eval DYNAMIC_$up=yes
 else
@@ -6947,7 +6947,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: syntactic_callgraph is not available" >&5
 $as_echo "$as_me: error: syntactic_callgraph is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -6960,7 +6960,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=syntactic_callgraph
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -6969,7 +6969,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} syntactic_callgraph"
   eval DYNAMIC_$up=yes
 else
@@ -6979,7 +6979,7 @@ fi
 echo "syntactic_callgraph... $ENABLE"
 
 
-if test "$ENABLE_SYNTACTIC_CALLGRAPH" == "yes"; then
+if test "$ENABLE_SYNTACTIC_CALLGRAPH" = "yes"; then
   USE_GNOMECANVAS=${USE_GNOMECANVAS}" syntactic_callgraph"
 fi
 
@@ -7045,7 +7045,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: users is not available" >&5
 $as_echo "$as_me: error: users is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -7058,7 +7058,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=users
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -7067,7 +7067,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} users"
   eval DYNAMIC_$up=yes
 else
@@ -7139,7 +7139,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: value is not available" >&5
 $as_echo "$as_me: error: value is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -7152,7 +7152,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=value
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -7161,7 +7161,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} value"
   eval DYNAMIC_$up=yes
 else
@@ -7233,7 +7233,7 @@ fi
 #)
 #eval ENABLE_DYNAMIC_$up=\$ENABLE
 
-if test "$plugin_present" == "no" -a "$FORCE" == "yes"; then
+if test "$plugin_present" = "no" -a "$FORCE" = "yes"; then
   { { $as_echo "$as_me:$LINENO: error: wp is not available" >&5
 $as_echo "$as_me: error: wp is not available" >&2;}
    { (exit 1); exit 1; }; }
@@ -7246,7 +7246,7 @@ PLUGINS_FORCE_LIST=${PLUGINS_FORCE_LIST}
 eval ENABLE_$up=\$ENABLE
 eval NAME_$up=wp
 
-if test "$default" == "no" -a "$FORCE" == "no"; then
+if test "$default" = "no" -a "$FORCE" = "no"; then
   # [JS 2009/03/27] don't know why that doesn't work in one single line
   tmp=" (not available by default)"
   eval INFO_$up=\$tmp
@@ -7255,7 +7255,7 @@ fi
 # Dynamic plug-ins configuration
 is_static=yes
 
-if test "$is_static" == "no"; then
+if test "$is_static" = "no"; then
   USE_NATIVE_DYNLINK="${USE_NATIVE_DYNLINK} wp"
   eval DYNAMIC_$up=yes
 else
@@ -7265,7 +7265,7 @@ fi
 echo "wp... $ENABLE"
 
 
-if test "$ENABLE_WP" == "yes"; then
+if test "$ENABLE_WP" = "yes"; then
   USE_ALTERGO=${USE_ALTERGO}" wp"
   USE_WHY=${USE_WHY}" wp"
 fi
@@ -7278,7 +7278,7 @@ EXTRA_EXTERNAL_PLUGINS=
 
 # Check whether --enable-external was given.
 if test "${enable_external+set}" = set; then
-  enableval=$enable_external; if test "$enableval" == "yes" || test "$enableval" == "no"; then
+  enableval=$enable_external; if test "$enableval" = "yes" || test "$enableval" = "no"; then
     { { $as_echo "$as_me:$LINENO: error: --enable-external expects a directory as argument" >&5
 $as_echo "$as_me: error: --enable-external expects a directory as argument" >&2;}
    { (exit 1); exit 1; }; };
@@ -7629,11 +7629,11 @@ USE_GTKSOURCEVIEW=
 HAS_GTKSOURCEVIEW=
 FORCE_GTKSOURCEVIEW="yes"
 
-if test "$FORCE_GTKSOURCEVIEW" == "yes"; then
+if test "$FORCE_GTKSOURCEVIEW" = "yes"; then
   REQUIRE_GTKSOURCEVIEW="$REQUIRE_LABLGTK"
   USE_GTKSOURCEVIEW="$USE_LABLGTK"
 else
-  if test "$has" == "yes"; then
+  if test "$has" = "yes"; then
     USE_GTKSOURCEVIEW="$REQUIRE_LABLGTK$USE_LABLGTK"
   fi
 fi
@@ -7726,7 +7726,7 @@ fi
 
 
 
-  if test -n "$REQUIRE_LABLGLADECC" -o -n "$USE_LABLGLADECC" -o "$no" == "yes"; then
+  if test -n "$REQUIRE_LABLGLADECC" -o -n "$USE_LABLGLADECC" -o "$no" = "yes"; then
     for file in lablgladecc2; do
      HAS_LABLGLADECC=
     # Extract the first word of "$file", so it can be a program name with args.
@@ -7767,9 +7767,9 @@ $as_echo "no" >&6; }
 fi
 
 
-      if test "$HAS_LABLGLADECC" == "yes"; then SELECTED_VAR=$file break; fi
+      if test "$HAS_LABLGLADECC" = "yes"; then SELECTED_VAR=$file break; fi
       done
-    if test "$HAS_LABLGLADECC" == "no"; then
+    if test "$HAS_LABLGLADECC" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: lablgladecc2 not found." >&5
 $as_echo "$as_me: WARNING: lablgladecc2 not found." >&2;}
       if test "$REQUIRE_LABLGLADECC" != ""; then
@@ -7777,7 +7777,7 @@ $as_echo "$as_me: WARNING: lablgladecc2 
  $REQUIRE_LABLGLADECC"
         for p in $REQUIRE_LABLGLADECC; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but lablgladecc2 missing." >&5
 $as_echo "$as_me: error: $p requested but lablgladecc2 missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -7819,7 +7819,7 @@ $as_echo "$as_me: error: $p requested bu
 
 
 
-  if test -n "$REQUIRE_LTLTOBA" -o -n "$USE_LTLTOBA" -o "$no" == "yes"; then
+  if test -n "$REQUIRE_LTLTOBA" -o -n "$USE_LTLTOBA" -o "$no" = "yes"; then
     for file in ltl2ba; do
      HAS_LTLTOBA=
     # Extract the first word of "$file", so it can be a program name with args.
@@ -7860,9 +7860,9 @@ $as_echo "no" >&6; }
 fi
 
 
-      if test "$HAS_LTLTOBA" == "yes"; then SELECTED_VAR=$file break; fi
+      if test "$HAS_LTLTOBA" = "yes"; then SELECTED_VAR=$file break; fi
       done
-    if test "$HAS_LTLTOBA" == "no"; then
+    if test "$HAS_LTLTOBA" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: ltl2ba not found." >&5
 $as_echo "$as_me: WARNING: ltl2ba not found." >&2;}
       if test "$REQUIRE_LTLTOBA" != ""; then
@@ -7870,7 +7870,7 @@ $as_echo "$as_me: WARNING: ltl2ba not fo
  $REQUIRE_LTLTOBA"
         for p in $REQUIRE_LTLTOBA; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but ltl2ba missing." >&5
 $as_echo "$as_me: error: $p requested but ltl2ba missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -7915,7 +7915,7 @@ $as_echo "$as_me: error: $p requested bu
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_LABLGTK" -o -n "$USE_LABLGTK" -o "no" == "yes"; then
+  if test -n "$REQUIRE_LABLGTK" -o -n "$USE_LABLGTK" -o "no" = "yes"; then
     HAS_LABLGTK=no
     if test "$HAS_LABLGTK" != "yes"; then
           as_ac_File=`$as_echo "ac_cv_file_$OCAMLLIB/lablgtk2/lablgtk.$LIB_SUFFIX" | $as_tr_sh`
@@ -7946,11 +7946,11 @@ else
   HAS_LABLGTK=no
 fi
 
-          if test "$HAS_LABLGTK" == "yes"; then SELECTED_LABLGTK=$OCAMLLIB/lablgtk2/lablgtk.$LIB_SUFFIX
+          if test "$HAS_LABLGTK" = "yes"; then SELECTED_LABLGTK=$OCAMLLIB/lablgtk2/lablgtk.$LIB_SUFFIX
           fi
        fi
 
-    if test "$HAS_LABLGTK" == "no"; then
+    if test "$HAS_LABLGTK" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: lablgtk2/lablgtk.$LIB_SUFFIX not found." >&5
 $as_echo "$as_me: WARNING: lablgtk2/lablgtk.$LIB_SUFFIX not found." >&2;}
       if test "$REQUIRE_LABLGTK" != ""; then
@@ -7958,7 +7958,7 @@ $as_echo "$as_me: WARNING: lablgtk2/labl
  $REQUIRE_LABLGTK"
         for p in $REQUIRE_LABLGTK; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but $OCAMLLIB/lablgtk2/lablgtk.$LIB_SUFFIX missing." >&5
 $as_echo "$as_me: error: $p requested but $OCAMLLIB/lablgtk2/lablgtk.$LIB_SUFFIX missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -8002,7 +8002,7 @@ $as_echo "$as_me: error: $p requested bu
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_GTKSOURCEVIEW" -o -n "$USE_GTKSOURCEVIEW" -o "no" == "yes"; then
+  if test -n "$REQUIRE_GTKSOURCEVIEW" -o -n "$USE_GTKSOURCEVIEW" -o "no" = "yes"; then
     HAS_GTKSOURCEVIEW=no
     if test "$HAS_GTKSOURCEVIEW" != "yes"; then
           as_ac_File=`$as_echo "ac_cv_file_$OCAMLLIB/lablgtk2/lablgtksourceview.$LIB_SUFFIX" | $as_tr_sh`
@@ -8033,7 +8033,7 @@ else
   HAS_GTKSOURCEVIEW=no
 fi
 
-          if test "$HAS_GTKSOURCEVIEW" == "yes"; then SELECTED_GTKSOURCEVIEW=$OCAMLLIB/lablgtk2/lablgtksourceview.$LIB_SUFFIX
+          if test "$HAS_GTKSOURCEVIEW" = "yes"; then SELECTED_GTKSOURCEVIEW=$OCAMLLIB/lablgtk2/lablgtksourceview.$LIB_SUFFIX
           fi
        fi
        if test "$HAS_GTKSOURCEVIEW" != "yes"; then
@@ -8065,11 +8065,11 @@ else
   HAS_GTKSOURCEVIEW=no
 fi
 
-          if test "$HAS_GTKSOURCEVIEW" == "yes"; then SELECTED_GTKSOURCEVIEW=$OCAMLLIB/lablgtksourceview/lablgtksourceview.$LIB_SUFFIX
+          if test "$HAS_GTKSOURCEVIEW" = "yes"; then SELECTED_GTKSOURCEVIEW=$OCAMLLIB/lablgtksourceview/lablgtksourceview.$LIB_SUFFIX
           fi
        fi
 
-    if test "$HAS_GTKSOURCEVIEW" == "no"; then
+    if test "$HAS_GTKSOURCEVIEW" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: lablgtksourceview.$LIB_SUFFIX not found" >&5
 $as_echo "$as_me: WARNING: lablgtksourceview.$LIB_SUFFIX not found" >&2;}
       if test "$REQUIRE_GTKSOURCEVIEW" != ""; then
@@ -8077,7 +8077,7 @@ $as_echo "$as_me: WARNING: lablgtksource
  $REQUIRE_GTKSOURCEVIEW"
         for p in $REQUIRE_GTKSOURCEVIEW; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but $OCAMLLIB/lablgtk2/lablgtksourceview.$LIB_SUFFIX" >&5
 $as_echo "$as_me: error: $p requested but $OCAMLLIB/lablgtk2/lablgtksourceview.$LIB_SUFFIX" >&2;}
    { (exit $OCAMLLIB/lablgtksourceview/lablgtksourceview.$LIB_SUFFIX missing.); exit $OCAMLLIB/lablgtksourceview/lablgtksourceview.$LIB_SUFFIX missing.; }; }
@@ -8121,7 +8121,7 @@ $as_echo "$as_me: error: $p requested bu
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_GNOMECANVAS" -o -n "$USE_GNOMECANVAS" -o "" == "yes"; then
+  if test -n "$REQUIRE_GNOMECANVAS" -o -n "$USE_GNOMECANVAS" -o "" = "yes"; then
     HAS_GNOMECANVAS=no
     if test "$HAS_GNOMECANVAS" != "yes"; then
           as_ac_File=`$as_echo "ac_cv_file_$OCAMLLIB/lablgtk2/lablgnomecanvas.$LIB_SUFFIX" | $as_tr_sh`
@@ -8152,11 +8152,11 @@ else
   HAS_GNOMECANVAS=no
 fi
 
-          if test "$HAS_GNOMECANVAS" == "yes"; then SELECTED_GNOMECANVAS=$OCAMLLIB/lablgtk2/lablgnomecanvas.$LIB_SUFFIX
+          if test "$HAS_GNOMECANVAS" = "yes"; then SELECTED_GNOMECANVAS=$OCAMLLIB/lablgtk2/lablgnomecanvas.$LIB_SUFFIX
           fi
        fi
 
-    if test "$HAS_GNOMECANVAS" == "no"; then
+    if test "$HAS_GNOMECANVAS" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: lablgnomecanvas.$LIB_SUFFIX not found" >&5
 $as_echo "$as_me: WARNING: lablgnomecanvas.$LIB_SUFFIX not found" >&2;}
       if test "$REQUIRE_GNOMECANVAS" != ""; then
@@ -8164,7 +8164,7 @@ $as_echo "$as_me: WARNING: lablgnomecanv
  $REQUIRE_GNOMECANVAS"
         for p in $REQUIRE_GNOMECANVAS; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but $OCAMLLIB/lablgtk2/lablgnomecanvas.$LIB_SUFFIX missing." >&5
 $as_echo "$as_me: error: $p requested but $OCAMLLIB/lablgtk2/lablgnomecanvas.$LIB_SUFFIX missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -8208,7 +8208,7 @@ $as_echo "$as_me: error: $p requested bu
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_APRON" -o -n "$USE_APRON" -o "" == "yes"; then
+  if test -n "$REQUIRE_APRON" -o -n "$USE_APRON" -o "" = "yes"; then
     HAS_APRON=no
     if test "$HAS_APRON" != "yes"; then
           { $as_echo "$as_me:$LINENO: checking for /usr/local/lib/apron.a" >&5
@@ -8234,7 +8234,7 @@ else
   HAS_APRON=no
 fi
 
-          if test "$HAS_APRON" == "yes"; then SELECTED_APRON=/usr/local/lib/apron.a
+          if test "$HAS_APRON" = "yes"; then SELECTED_APRON=/usr/local/lib/apron.a
           fi
        fi
        if test "$HAS_APRON" != "yes"; then
@@ -8261,11 +8261,11 @@ else
   HAS_APRON=no
 fi
 
-          if test "$HAS_APRON" == "yes"; then SELECTED_APRON=/usr/lib/apron.a
+          if test "$HAS_APRON" = "yes"; then SELECTED_APRON=/usr/lib/apron.a
           fi
        fi
 
-    if test "$HAS_APRON" == "no"; then
+    if test "$HAS_APRON" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: apron not found" >&5
 $as_echo "$as_me: WARNING: apron not found" >&2;}
       if test "$REQUIRE_APRON" != ""; then
@@ -8273,7 +8273,7 @@ $as_echo "$as_me: WARNING: apron not fou
  $REQUIRE_APRON"
         for p in $REQUIRE_APRON; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but /usr/local/lib/apron.a" >&5
 $as_echo "$as_me: error: $p requested but /usr/local/lib/apron.a" >&2;}
    { (exit /usr/lib/apron.a missing.); exit /usr/lib/apron.a missing.; }; }
@@ -8314,7 +8314,7 @@ $as_echo "$as_me: error: $p requested bu
 
 
 
-  if test -n "$REQUIRE_WHY" -o -n "$USE_WHY" -o "$no" == "yes"; then
+  if test -n "$REQUIRE_WHY" -o -n "$USE_WHY" -o "$no" = "yes"; then
     for FILE_APRON in why; do
      HAS_WHY=
     # Extract the first word of "$FILE_APRON", so it can be a program name with args.
@@ -8355,9 +8355,9 @@ $as_echo "no" >&6; }
 fi
 
 
-      if test "$HAS_WHY" == "yes"; then SELECTED_VAR=$FILE_APRON break; fi
+      if test "$HAS_WHY" = "yes"; then SELECTED_VAR=$FILE_APRON break; fi
       done
-    if test "$HAS_WHY" == "no"; then
+    if test "$HAS_WHY" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: why not found" >&5
 $as_echo "$as_me: WARNING: why not found" >&2;}
       if test "$REQUIRE_WHY" != ""; then
@@ -8365,7 +8365,7 @@ $as_echo "$as_me: WARNING: why not found
  $REQUIRE_WHY"
         for p in $REQUIRE_WHY; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but why missing." >&5
 $as_echo "$as_me: error: $p requested but why missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -8410,7 +8410,7 @@ $as_echo "$as_me: error: $p requested bu
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_WHYJC" -o -n "$USE_WHYJC" -o "no" == "yes"; then
+  if test -n "$REQUIRE_WHYJC" -o -n "$USE_WHYJC" -o "no" = "yes"; then
     HAS_WHYJC=no
     if test "$HAS_WHYJC" != "yes"; then
           as_ac_File=`$as_echo "ac_cv_file_$WHYDISTRIB/jc" | $as_tr_sh`
@@ -8441,7 +8441,7 @@ else
   HAS_WHYJC=no
 fi
 
-          if test "$HAS_WHYJC" == "yes"; then SELECTED_WHYJC=$WHYDISTRIB/jc
+          if test "$HAS_WHYJC" = "yes"; then SELECTED_WHYJC=$WHYDISTRIB/jc
           fi
        fi
        if test "$HAS_WHYJC" != "yes"; then
@@ -8473,11 +8473,11 @@ else
   HAS_WHYJC=no
 fi
 
-          if test "$HAS_WHYJC" == "yes"; then SELECTED_WHYJC=$OCAMLLIB/jessie/jc.$OBJ_SUFFIX
+          if test "$HAS_WHYJC" = "yes"; then SELECTED_WHYJC=$OCAMLLIB/jessie/jc.$OBJ_SUFFIX
           fi
        fi
 
-    if test "$HAS_WHYJC" == "no"; then
+    if test "$HAS_WHYJC" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: jc not found" >&5
 $as_echo "$as_me: WARNING: jc not found" >&2;}
       if test "$REQUIRE_WHYJC" != ""; then
@@ -8485,7 +8485,7 @@ $as_echo "$as_me: WARNING: jc not found"
  $REQUIRE_WHYJC"
         for p in $REQUIRE_WHYJC; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but $WHYDISTRIB/jc" >&5
 $as_echo "$as_me: error: $p requested but $WHYDISTRIB/jc" >&2;}
    { (exit $OCAMLLIB/jessie/jc.$OBJ_SUFFIX missing.); exit $OCAMLLIB/jessie/jc.$OBJ_SUFFIX missing.; }; }
@@ -8529,7 +8529,7 @@ $as_echo "$as_me: error: $p requested bu
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_NATIVE_DYNLINK" -o -n "$USE_NATIVE_DYNLINK" -o "yes" == "yes"; then
+  if test -n "$REQUIRE_NATIVE_DYNLINK" -o -n "$USE_NATIVE_DYNLINK" -o "yes" = "yes"; then
     HAS_NATIVE_DYNLINK=no
     if test "$HAS_NATIVE_DYNLINK" != "yes"; then
           as_ac_File=`$as_echo "ac_cv_file_$OCAMLLIB/dynlink.cmxa" | $as_tr_sh`
@@ -8560,11 +8560,11 @@ else
   HAS_NATIVE_DYNLINK=no
 fi
 
-          if test "$HAS_NATIVE_DYNLINK" == "yes"; then SELECTED_NATIVE_DYNLINK=$OCAMLLIB/dynlink.cmxa
+          if test "$HAS_NATIVE_DYNLINK" = "yes"; then SELECTED_NATIVE_DYNLINK=$OCAMLLIB/dynlink.cmxa
           fi
        fi
 
-    if test "$HAS_NATIVE_DYNLINK" == "no"; then
+    if test "$HAS_NATIVE_DYNLINK" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: native dynlink unavailable (ocaml 3.11 or higher required)" >&5
 $as_echo "$as_me: WARNING: native dynlink unavailable (ocaml 3.11 or higher required)" >&2;}
       if test "$REQUIRE_NATIVE_DYNLINK" != ""; then
@@ -8572,7 +8572,7 @@ $as_echo "$as_me: WARNING: native dynlin
  $REQUIRE_NATIVE_DYNLINK"
         for p in $REQUIRE_NATIVE_DYNLINK; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but $OCAMLLIB/dynlink.cmxa missing." >&5
 $as_echo "$as_me: error: $p requested but $OCAMLLIB/dynlink.cmxa missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -8613,7 +8613,7 @@ $as_echo "$as_me: error: $p requested bu
 
 
 
-  if test -n "$REQUIRE_ALTERGO" -o -n "$USE_ALTERGO" -o "$no" == "yes"; then
+  if test -n "$REQUIRE_ALTERGO" -o -n "$USE_ALTERGO" -o "$no" = "yes"; then
     for FILE_NATIVE_DYNLINK in alt-ergo; do
      HAS_ALTERGO=
     # Extract the first word of "$FILE_NATIVE_DYNLINK", so it can be a program name with args.
@@ -8654,9 +8654,9 @@ $as_echo "no" >&6; }
 fi
 
 
-      if test "$HAS_ALTERGO" == "yes"; then SELECTED_VAR=$FILE_NATIVE_DYNLINK break; fi
+      if test "$HAS_ALTERGO" = "yes"; then SELECTED_VAR=$FILE_NATIVE_DYNLINK break; fi
       done
-    if test "$HAS_ALTERGO" == "no"; then
+    if test "$HAS_ALTERGO" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: alt-ergo not found" >&5
 $as_echo "$as_me: WARNING: alt-ergo not found" >&2;}
       if test "$REQUIRE_ALTERGO" != ""; then
@@ -8664,7 +8664,7 @@ $as_echo "$as_me: WARNING: alt-ergo not 
  $REQUIRE_ALTERGO"
         for p in $REQUIRE_ALTERGO; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but alt-ergo missing." >&5
 $as_echo "$as_me: error: $p requested but alt-ergo missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -8702,13 +8702,13 @@ $as_echo "$as_me: error: $p requested bu
 # Why
 #####
 
-if test "$HAS_WHY" == "yes"; then
+if test "$HAS_WHY" = "yes"; then
    rm -f tests/wp/test_config_dev
    cp tests/wp/test_config_dev.system_why tests/wp/test_config_dev
    chmod a-w  tests/wp/test_config_dev
 fi
 
-if test "$HAS_WHYJC" == "yes" -a "$REQUIRE_WHYJC" != ""; then
+if test "$HAS_WHYJC" = "yes" -a "$REQUIRE_WHYJC" != ""; then
   case $SELECTED_WHYJC in
   $WHYDISTRIB/jc)
     WHYBIN=$WHYDISTRIB/bin/why.opt
@@ -8723,7 +8723,7 @@ if test "$HAS_WHYJC" == "yes" -a "$REQUI
     # for fresh cvs checkout of why...
     if test ! -r $WHYDISTRIB/configure; then (cd $WHYDISTRIB && autoconf); fi
     if test ! -d $WHYDISTRIB/ocamlgraph -a "$OCAMLGRAPH_LOCAL" != ""; then
-      if test "$OCAMLGRAPH_TAR" == "yes"; then
+      if test "$OCAMLGRAPH_TAR" = "yes"; then
        (cd $WHYDISTRIB && tar -xzf ../ocamlgraph.tar.gz);
       else
        { $as_echo "$as_me:$LINENO: WARNING: No ocamlgraph available. Why configuration might fail" >&5
@@ -8739,12 +8739,12 @@ $as_echo "$as_me: WARNING: No ocamlgraph
       --exec_prefix=$exec_prefix --bindir=$bindir --libdir=$datadir/frama-c \
       --host=$host --build=$build --mandir=$mandir --enable-apron=$HAS_APRON) || ENABLE_JESSIE=no
     fi
-    if test "$ENABLE_JESSIE" == "no"; then
+    if test "$ENABLE_JESSIE" = "no"; then
        INFO_JESSIE=" (configuration of Why failed)"
        # wp can still attempt to use system why if it exists.
        JESSIE_LOCAL=no
        rm -f tests/wp/test_config_dev
-       if test "$HAS_WHY" == "yes"; then
+       if test "$HAS_WHY" = "yes"; then
          cp tests/wp/test_config_dev.system_why tests/wp/test_config_dev
          chmod a-w  tests/wp/test_config_dev
        fi
@@ -8776,7 +8776,7 @@ fi
 # Usable native dynlink
 
 # Checking internal invariant
-if test "$HAS_NATIVE_DYNLINK" == "uncheck"; then
+if test "$HAS_NATIVE_DYNLINK" = "uncheck"; then
    { { $as_echo "$as_me:$LINENO: error: Internal error with check of native dynlink. Please report." >&5
 $as_echo "$as_me: error: Internal error with check of native dynlink. Please report." >&2;}
    { (exit 1); exit 1; }; }
@@ -8814,7 +8814,7 @@ if test "$HAS_NATIVE_DYNLINK" != "no" ; 
 # [JS 2009/06/02] sh tests and m4 variables do not mix well together.
 # It works by chance but it is not robust enough.
 # Should be rewritten
-  if test -n "$REQUIRE_USABLE_NATIVE_DYNLINK" -o -n "$USE_USABLE_NATIVE_DYNLINK" -o "yes" == "yes"; then
+  if test -n "$REQUIRE_USABLE_NATIVE_DYNLINK" -o -n "$USE_USABLE_NATIVE_DYNLINK" -o "yes" = "yes"; then
     HAS_USABLE_NATIVE_DYNLINK=no
     if test "$HAS_USABLE_NATIVE_DYNLINK" != "yes"; then
           { $as_echo "$as_me:$LINENO: checking for dynlink" >&5
@@ -8840,11 +8840,11 @@ else
   HAS_USABLE_NATIVE_DYNLINK=no
 fi
 
-          if test "$HAS_USABLE_NATIVE_DYNLINK" == "yes"; then SELECTED_USABLE_NATIVE_DYNLINK=dynlink
+          if test "$HAS_USABLE_NATIVE_DYNLINK" = "yes"; then SELECTED_USABLE_NATIVE_DYNLINK=dynlink
           fi
        fi
 
-    if test "$HAS_USABLE_NATIVE_DYNLINK" == "no"; then
+    if test "$HAS_USABLE_NATIVE_DYNLINK" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: native dynlink unsupported on this platform" >&5
 $as_echo "$as_me: WARNING: native dynlink unsupported on this platform" >&2;}
       if test "$REQUIRE_USABLE_NATIVE_DYNLINK" != ""; then
@@ -8852,7 +8852,7 @@ $as_echo "$as_me: WARNING: native dynlin
  $REQUIRE_USABLE_NATIVE_DYNLINK"
         for p in $REQUIRE_USABLE_NATIVE_DYNLINK; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but dynlink missing." >&5
 $as_echo "$as_me: error: $p requested but dynlink missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -8891,7 +8891,7 @@ fi
 
 # Lablgtk2's custom tree model
 
-if test "$HAS_LABLGTK" == "yes"; then
+if test "$HAS_LABLGTK" = "yes"; then
   if echo "type ('a,'b,'c,'d) t = ('a,'b,'c,'d) GTree.custom_tree_model" > test_custommodel.ml && ocamlc -c -I +lablgtk2 test_custommodel.ml 2> /dev/null; \
   then
     { $as_echo "$as_me:$LINENO: checking for lablgtk2's custom tree model" >&5
@@ -8921,7 +8921,7 @@ $as_echo "yes" >&6; }
 # It works by chance but it is not robust enough.
 # Should be rewritten
   if test -n "$REQUIRE_LABLGTK" -o -n "$USE_LABLGTK" -o "yes
-    " == "yes"; then
+    " = "yes"; then
     HAS_LABLGTK=no
     if test "$HAS_LABLGTK" != "yes"; then
           { $as_echo "$as_me:$LINENO: checking for custom-tree-model" >&5
@@ -8947,11 +8947,11 @@ else
   HAS_LABLGTK=no
 fi
 
-          if test "$HAS_LABLGTK" == "yes"; then SELECTED_LABLGTK=custom-tree-model
+          if test "$HAS_LABLGTK" = "yes"; then SELECTED_LABLGTK=custom-tree-model
           fi
        fi
 
-    if test "$HAS_LABLGTK" == "no"; then
+    if test "$HAS_LABLGTK" = "no"; then
       { $as_echo "$as_me:$LINENO: WARNING: lablgtk2's custom tree model unavailable. You need at least LablGtk 2.12." >&5
 $as_echo "$as_me: WARNING: lablgtk2's custom tree model unavailable. You need at least LablGtk 2.12." >&2;}
       if test "$REQUIRE_LABLGTK" != ""; then
@@ -8959,7 +8959,7 @@ $as_echo "$as_me: WARNING: lablgtk2's cu
  $REQUIRE_LABLGTK"
         for p in $REQUIRE_LABLGTK; do
 	  fp=FORCE_`upper "$p"`
-	  if eval test "\$$fp" == "yes"; then
+	  if eval test "\$$fp" = "yes"; then
 	    { { $as_echo "$as_me:$LINENO: error: $p requested but custom-tree-model missing." >&5
 $as_echo "$as_me: error: $p requested but custom-tree-model missing." >&2;}
    { (exit 1); exit 1; }; }
@@ -9074,9 +9074,9 @@ check_and_propagate () {
       short_mark=`echo $2 | sed -e 's/ .*//'`
       lp=`lower $p`
       reason=`echo $2 | sed -e 's/no (\(.*\))/\1/' `
-      if test "$short_mark" == "no"; then
+      if test "$short_mark" = "no"; then
         fp=FORCE_"$up"
-        if eval test "\$$fp" == "yes"; then
+        if eval test "\$$fp" = "yes"; then
 	  { { $as_echo "$as_me:$LINENO: error: $lp requested but $reason." >&5
 $as_echo "$as_me: error: $lp requested but $reason." >&2;}
    { (exit 1); exit 1; }; }
@@ -9085,7 +9085,7 @@ $as_echo "$as_me: error: $lp requested b
 $as_echo "$as_me: WARNING: $lp disable because $reason." >&2;}
         fi
       else
-        if test "$short_mark" == "partial"; then
+        if test "$short_mark" = "partial"; then
           reason=`echo $2 | sed -e 's/partial (\(.*\))/\1/' `
 	  { $as_echo "$as_me:$LINENO: WARNING: $lp only partially enable because $reason." >&5
 $as_echo "$as_me: WARNING: $lp only partially enable because $reason." >&2;}
@@ -9140,7 +9140,7 @@ compute_dependency () {
     case `echo "$mark" | sed -e 's/ .*//' ` in
       "" | "yes")
        if test -n "$enable"; then mark="$enable"; else mark="yes"; fi;;
-      "partial") if test "$enable" == "no"; then mark="no"; fi;;
+      "partial") if test "$enable" = "no"; then mark="no"; fi;;
       "no")      ;;
     esac
     # update plug-in attributes with the new mark
