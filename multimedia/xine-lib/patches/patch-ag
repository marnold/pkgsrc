$NetBSD: patch-ag,v 1.8.4.1 2005/10/15 16:07:46 salo Exp $

--- configure.ac.orig	2005-10-08 16:08:37.000000000 +0200
+++ configure.ac
@@ -200,7 +200,7 @@ AC_ARG_WITH(pthread-prefix, 
   [pthread_prefix="no"])
 
 case "$host" in
-  *-*-freebsd*)
+  *-*-freebsd* | -*-*-dragonfly*)
     if test x"$pthread_prefix" = "xno"; then
       pthread_prefix="/usr/local"
     fi
@@ -437,6 +437,9 @@ AC_CHECK_LIB(socket, socket, NET_LIBS="-
 AC_CHECK_LIB(nsl, gethostbyname, NET_LIBS="-lnsl $NET_LIBS",)
 AC_SUBST(NET_LIBS)
 
+WINE_LIBS=""
+AC_CHECK_LIB(i386, i386_set_ldt, WINE_LIBS="-li386 $WINE_LIBS",)
+AC_SUBST(WINE_LIBS)
 
 dnl ---------------------------------------------
 dnl socklen_t
@@ -630,7 +633,7 @@ XXMC_LIB="-L$xxmc_path -l$xxmc_stub"
 AC_MSG_CHECKING(whether to enable the xxmc plugin with vld extensions)
 AC_MSG_RESULT()
 dnl Check if vld "extended" XvMC is available
-if test x$xxmc_stub == "xXvMCW"; then
+if test x$xxmc_stub = "xXvMCW"; then
 	AC_CHECK_LIB($xxmc_stub, XvMCPutSlice,
              	     ac_have_xxmc="yes",
 	             [ac_have_xxmc="no"
@@ -660,7 +663,7 @@ if test x$ac_have_xxmc = "xyes"; then
 fi
 dnl Try fallback to standard XvMC if vld failed
 if test x$ac_have_xxmc = "xno"; then
-  if test x$xxmc_stub == "xXvMCW"; then
+  if test x$xxmc_stub = "xXvMCW"; then
 	  AC_CHECK_LIB($xxmc_stub, XvMCCreateContext,
                ac_have_xxmc="yes",
 	       [ac_have_xxmc="no"
@@ -714,7 +717,7 @@ saved_libs="$LIBS"
 XVMC_LIB="-L$xvmc_path -l$xvmc_stub"
 AC_MSG_CHECKING(whether to enable the xvmc plugin)
 AC_MSG_RESULT()
-if test x$xvmc_stub == "xXvMCW"; then
+if test x$xvmc_stub = "xXvMCW"; then
 	AC_CHECK_LIB($xvmc_stub, XvMCCreateContext,
              ac_have_xvmc="yes",
 	     [ac_have_xvmc="no"
@@ -754,8 +757,7 @@ dnl Checks for Xinerama extension
 dnl ---------------------------------------------
 
 AC_CHECK_LIB(Xinerama, XineramaQueryExtension, 
-             [X_LIBS="$X_LIBS -lXinerama"
-              AC_DEFINE(HAVE_XINERAMA,1,[Define this if you have libXinerama installed])
+             [AC_DEFINE(HAVE_XINERAMA,1,[Define this if you have libXinerama installed])
               ac_have_xinerama="yes"],,
              [$X_LIBS $X_PRE_LIBS -lXext $X_EXTRA_LIBS])
 dnl AM_CONDITIONAL(HAVE_XINERAMA, test x$ac_have_xinerama = "xyes")
@@ -1194,9 +1196,19 @@ dnl ------------------------------------
 dnl OSS style audio interface
 dnl ---------------------------------------------
 
+case "$host" in
+       *-*-netbsd*|*-*-openbsd*)
+	OSS_LIBS="-lossaudio"
+	;;
+	*)
+	OSS_LIBS=""
+	;;
+esac
+
 AC_MSG_CHECKING(for OSS audio support)
 have_ossaudio=no
 AC_TRY_COMPILE([
+	    #include <sys/ioctl.h>
 	    #ifdef __NetBSD__
 	    #include <soundcard.h>
 	    #else
@@ -1209,7 +1221,7 @@ AC_TRY_COMPILE([
 	])
 AC_MSG_RESULT($have_ossaudio)
 AM_CONDITIONAL(HAVE_OSS, test x"$have_ossaudio" = "xyes")
-
+AC_SUBST(OSS_LIBS)
 
 dnl ---------------------------------------------
 dnl Alsa support
@@ -1250,9 +1262,10 @@ dnl ------------------------------------
 dnl gnome-vfs support
 dnl ---------------------------------------------
 
-PKG_CHECK_MODULES(GNOME_VFS, gnome-vfs-2.0,
-                no_gnome_vfs=no,
-		no_gnome_vfs=yes)
+dnl PKG_CHECK_MODULES(GNOME_VFS, gnome-vfs-2.0,
+dnl                 no_gnome_vfs=no,
+dnl 		no_gnome_vfs=yes)
+no_gnome_vfs=yes
 AC_SUBST(GNOME_VFS_CFLAGS)
 AC_SUBST(GNOME_VFS_LIBS)
 if test x"$no_gnome_vfs" != "xyes"; then
@@ -1568,7 +1581,7 @@ int has_timeout=sizeof(test.timeout);],
      	    AC_DEFINE([HAVE_WIN32_CDROM], [1], 
                       [Define 1 if you have MinGW CD-ROM support])
 	 ;;
-         freebsd4.*)
+         freebsd4.* | dragonfly*)
      	    AC_DEFINE([HAVE_FREEBSD_CDROM], [1], 
                       [Define 1 if you have FreeBSD CD-ROM support])
 	 ;;
