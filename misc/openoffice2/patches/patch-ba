$NetBSD: patch-ba,v 1.10.4.1 2008/04/26 04:29:13 rtr Exp $

--- config_office/configure.orig	2008-01-31 20:47:17.000000000 +0900
+++ config_office/configure	2008-04-09 17:33:05.000000000 +0900
@@ -3176,11 +3176,11 @@
 		test_cups=no
 		_os=OSF1
 		;;
-	netbsd)
+	*netbsd*)
 		test_gtk=yes
 		build_cairo=yes
 		test_kde=yes
-		test_cups=no
+		test_cups=yes
 		PTHREAD_CFLAGS="-pthread"
 		PTHREAD_LIBS="-pthread -lpthread"
 		_os=NetBSD
@@ -10304,7 +10304,7 @@
 fi
 
 if test "$SOLAR_JAVA" != ""; then
-        if test "$JDK" == "gcj" -a -z "$JAVA_HOME"; then
+        if test "$JDK" = "gcj" -a -z "$JAVA_HOME"; then
       if test "x$with_jdk_home" = "x" -a "$_gij_longver" -ge "40200"; then
         cat > findhome.java <<_ACEOF
 import java.io.File;
@@ -10404,7 +10404,7 @@
          echo "JAVA_HOME was not explicitly informed with --with-jdk-home. the configure script" >> warn
          echo "attempted to find JAVA_HOME automatically, but apparently it failed" >> warn
          echo "in case JAVA_HOME is incorrectly set, some projects with not be built correctly" >> warn
-         if test "$JDK" == "gcj"; then
+         if test "$JDK" = "gcj"; then
              echo "e.g. install java-1.4.2-gcj-compat-devel and use --with-jdk-home=/usr/lib/jvm/java-1.4.2-gcj" >> warn
          fi
       fi
@@ -13098,7 +13098,7 @@
 if test -n "$with_system_libxslt" -o -n "$with_system_libs" && \
    test "$with_system_libxslt" != "no"; then
     if test -z "$with_system_libxml" -a -z "$with_system_libs" || \
-      test "$with_system_libxml" == "no"; then
+      test "$with_system_libxml" = "no"; then
       # somehow AC_MSG_WARN won't work...
        echo "to prevent incompatibilities between internal libxml2 and libxslt, the office will be build with system-libxml"
        echo "to prevent incompatibilities between internal libxml2 and libxslt, the office will be build with system-libxml" >> warn
@@ -13108,7 +13108,7 @@
 if test -n "$with_system_libxml" -o -n "$with_system_libs" && \
    test "$with_system_libxml" != "no"; then
     if test -z "$with_system_libxslt" -a -z "$with_system_libs" || \
-      test "$with_system_libxslt" == "no"; then
+      test "$with_system_libxslt" = "no"; then
       # somehow AC_MSG_WARN won't work...
        echo "to prevent incompatibilities between internal libxslt and libxml2, the office will be build with system-libxslt"
        echo "to prevent incompatibilities between internal libxslt and libxml2, the office will be build with system-libxslt" >> warn
@@ -13591,13 +13591,14 @@
 
 
    python_include=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('INCLUDEPY');"`
+   python_ldflags=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('LDFLAGS');"`
    python_version=`$PYTHON -c "import distutils.sysconfig; print distutils.sysconfig.get_config_var('VERSION');"`
    PYTHON_CFLAGS="-I$python_include"
 
    if test "$_os" = "Darwin"; then
       PYTHON_LIBS="-framework Python"
    else
-      PYTHON_LIBS="-lpython$python_version"
+      PYTHON_LIBS="-lpython$python_version $python_ldflags"
    fi
 
       save_CPPFLAGS="$CPPFLAGS"
@@ -13868,7 +13869,7 @@
 echo "$as_me:$LINENO: result: $ac_cv_header_db_h" >&5
 echo "${ECHO_T}$ac_cv_header_db_h" >&6
 if test $ac_cv_header_db_h = yes; then
-   DB_INCLUDES=/usr/include
+   DB_INCLUDES=${BLNK_PREFIX_db4}/include/db4
 else
 
              CFLAGS=-I/usr/include/db4
@@ -13991,13 +13992,13 @@
     #AC_CHECK_LIB(db, db_create, [],
     #  [AC_MSG_ERROR([db library not installed or functional])], [])
 
-echo "$as_me:$LINENO: checking for main in -ldb" >&5
-echo $ECHO_N "checking for main in -ldb... $ECHO_C" >&6
+echo "$as_me:$LINENO: checking for main in -ldb4" >&5
+echo $ECHO_N "checking for main in -ldb4... $ECHO_C" >&6
 if test "${ac_cv_lib_db_main+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldb  $LIBS"
+LIBS="-ldb4  $LIBS"
 cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
@@ -14054,7 +14055,7 @@
 #define HAVE_LIBDB 1
 _ACEOF
 
-  LIBS="-ldb $LIBS"
+  LIBS="-ldb4 $LIBS"
 
 else
   { { echo "$as_me:$LINENO: error: db not installed or functional" >&5
@@ -19781,7 +19782,7 @@
 echo "$as_me:$LINENO: result: $ac_cv_header_audio_audiolib_h" >&5
 echo "${ECHO_T}$ac_cv_header_audio_audiolib_h" >&6
 if test $ac_cv_header_audio_audiolib_h = yes; then
-   NAS_INCLUDES=/usr/include
+   NAS_INCLUDES=${BLNK_PREFIX_nas}/include
 else
 
              CFLAGS=-I/usr/X11R6/include
@@ -24012,7 +24013,7 @@
   ENABLE_REPORTDESIGN=YES
   echo "$as_me:$LINENO: checking which jfreereport libs to use" >&5
 echo $ECHO_N "checking which jfreereport libs to use... $ECHO_C" >&6
-  if test "$with_system_jfreereport" == "yes"; then
+  if test "$with_system_jfreereport" = "yes"; then
    	SYSTEM_JFREEREPORT=YES
   	echo "$as_me:$LINENO: result: external" >&5
 echo "${ECHO_T}external" >&6
@@ -24529,7 +24530,7 @@
     fi
 
         KDE_CFLAGS="-I$qt_incdir -I$kde_incdir -DQT_CLEAN_NAMESPACE -DQT_THREAD_SUPPORT"
-    KDE_LIBS="-L$kde_libdir -L$qt_libdir -lkdeui -lkdecore -lqt-mt"
+    KDE_LIBS="-L$kde_libdir -Wl,-R$kde_libdir -L$qt_libdir -Wl,-R$qt_libdir -lkdeui -lkdecore -lqt-mt"
 fi
 
 
@@ -25082,7 +25083,7 @@
    XINERAMA_LINK=dynamic
    echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6
-elif test "$_os" = "Linux" -o "$_os" = "FreeBSD"; then
+elif test "$_os" = "Linux" -o "$_os" = "FreeBSD" -o "$_os" = "NetBSD"; then
    if test -e "$XLIB/libXinerama.so" -a -e "$XLIB/libXinerama.a"; then
       # we have both versions, let the user decide but use the dynamic one
       # per default
