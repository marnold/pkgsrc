$NetBSD: patch-dh,v 1.1.1.1 2002/05/31 13:19:19 skrll Exp $

--- kwin/Makefile.in.orig	Mon May 13 23:57:54 2002
+++ kwin/Makefile.in
@@ -293,18 +293,22 @@
 SUBDIRS = . kcmkwin pics clients
 
 bin_PROGRAMS = kwin
-lib_LTLIBRARIES = kwin.la
+lib_LTLIBRARIES = libkwin.la kwin.la
 
 # workspace.cpp has to be first in order not to break --enable-final
-#>- kwin_la_SOURCES = workspace.cpp atoms.cpp  client.cpp main.cpp \
+#>- libkwin_la_SOURCES = workspace.cpp atoms.cpp  client.cpp main.cpp \
 #>- tabbox.cpp options.cpp plugins.cpp events.cpp KWinInterface.skel \
 #>- killwindow.cpp kwinbutton.cpp
 #>+ 3
-kwin_la_SOURCES=workspace.cpp atoms.cpp  client.cpp main.cpp \
+libkwin_la_SOURCES=workspace.cpp atoms.cpp  client.cpp main.cpp \
 	tabbox.cpp options.cpp plugins.cpp events.cpp  \
 	killwindow.cpp kwinbutton.cpp KWinInterface_skel.cpp
 
-kwin_la_LIBADD = $(LIB_KDEUI) $(LIBXINERAMA)
+libkwin_la_LIBADD = $(LIB_KDEUI) $(LIBXINERAMA)
+libkwin_la_LDFLAGS = $(all_libraries)
+
+kwin_la_SOURCES = kwin_main.cpp
+kwin_la_LIBADD = libkwin.la
 kwin_la_LDFLAGS = $(all_libraries) -module -avoid-version
 
 include_HEADERS = KWinInterface.h
@@ -313,7 +317,7 @@
 kwininclude_HEADERS = options.h client.h workspace.h kwinbutton.h
 
 kwin_SOURCES = kwin_main.cpp
-kwin_LDADD = kwin.la 
+kwin_LDADD = libkwin.la 
 kwin_LDFLAGS = $(all_libraries) $(KDE_RPATH)
 
 KDE_ICON = kwin
@@ -324,7 +328,6 @@
 
 sounddir = $(kde_sounddir)
 sound_DATA = pop.wav
-
 update_DATA = kwin.upd pluginlibFix.pl
 updatedir = $(kde_datadir)/kconf_update
 subdir = kwin
@@ -333,17 +336,24 @@
 CONFIG_CLEAN_FILES =
 LTLIBRARIES = $(lib_LTLIBRARIES)
 
-kwin_la_DEPENDENCIES =
-am_kwin_la_OBJECTS = workspace.lo atoms.lo client.lo main.lo tabbox.lo \
-	options.lo plugins.lo events.lo killwindow.lo kwinbutton.lo
+kwin_la_DEPENDENCIES = libkwin.la
+am_kwin_la_OBJECTS = kwin_main.lo
 #>- kwin_la_OBJECTS = $(am_kwin_la_OBJECTS)
-#>+ 6
-kwin_la_final_OBJECTS = kwin_la.all_cpp.lo 
-kwin_la_nofinal_OBJECTS = workspace.lo atoms.lo client.lo main.lo tabbox.lo \
-	options.lo plugins.lo events.lo killwindow.lo kwinbutton.lo KWinInterface_skel.lo \
-	kwin_la_meta_unload.lo 
-@KDE_USE_FINAL_FALSE@kwin_la_OBJECTS = $(kwin_la_nofinal_OBJECTS)
-@KDE_USE_FINAL_TRUE@kwin_la_OBJECTS = $(kwin_la_final_OBJECTS)
+#>+ 1
+kwin_la_OBJECTS = kwin_main.lo
+libkwin_la_DEPENDENCIES =
+am_libkwin_la_OBJECTS = workspace.lo atoms.lo client.lo main.lo \
+	tabbox.lo options.lo plugins.lo events.lo killwindow.lo \
+	kwinbutton.lo
+#>- libkwin_la_OBJECTS = $(am_libkwin_la_OBJECTS)
+#>+ 7
+libkwin_la_final_OBJECTS = libkwin_la.all_cpp.lo 
+libkwin_la_nofinal_OBJECTS = workspace.lo atoms.lo client.lo main.lo \
+	tabbox.lo options.lo plugins.lo events.lo killwindow.lo \
+	kwinbutton.lo KWinInterface_skel.lo \
+	libkwin_la_meta_unload.lo 
+@KDE_USE_FINAL_FALSE@libkwin_la_OBJECTS = $(libkwin_la_nofinal_OBJECTS)
+@KDE_USE_FINAL_TRUE@libkwin_la_OBJECTS = $(libkwin_la_final_OBJECTS)
 bin_PROGRAMS = kwin$(EXEEXT)
 PROGRAMS = $(bin_PROGRAMS)
 
@@ -351,7 +361,7 @@
 #>- kwin_OBJECTS = $(am_kwin_OBJECTS)
 #>+ 1
 kwin_OBJECTS = kwin_main.$(OBJEXT)
-kwin_DEPENDENCIES = kwin.la
+kwin_DEPENDENCIES = libkwin.la
 
 DEFS = @DEFS@
 DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
@@ -361,10 +371,10 @@
 depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
 @AMDEP_TRUE@DEP_FILES = $(DEPDIR)/atoms.Plo $(DEPDIR)/client.Plo \
 	@AMDEP_TRUE@	$(DEPDIR)/events.Plo $(DEPDIR)/killwindow.Plo \
-	@AMDEP_TRUE@	$(DEPDIR)/kwin_main.Po $(DEPDIR)/kwinbutton.Plo \
-	@AMDEP_TRUE@	$(DEPDIR)/main.Plo $(DEPDIR)/options.Plo \
-	@AMDEP_TRUE@	$(DEPDIR)/plugins.Plo $(DEPDIR)/tabbox.Plo \
-	@AMDEP_TRUE@	$(DEPDIR)/workspace.Plo
+	@AMDEP_TRUE@	$(DEPDIR)/kwin_main.Plo $(DEPDIR)/kwin_main.Po \
+	@AMDEP_TRUE@	$(DEPDIR)/kwinbutton.Plo $(DEPDIR)/main.Plo \
+	@AMDEP_TRUE@	$(DEPDIR)/options.Plo $(DEPDIR)/plugins.Plo \
+	@AMDEP_TRUE@	$(DEPDIR)/tabbox.Plo $(DEPDIR)/workspace.Plo
 #>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 #>- $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
 #>+ 2
@@ -384,7 +394,7 @@
 CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
 CXXFLAGS = @CXXFLAGS@
-DIST_SOURCES = $(kwin_la_SOURCES) $(kwin_SOURCES)
+DIST_SOURCES = $(kwin_la_SOURCES) $(libkwin_la_SOURCES) $(kwin_SOURCES)
 DATA = $(data_DATA) $(sound_DATA) $(update_DATA)
 
 HEADERS = $(include_HEADERS) $(kwininclude_HEADERS)
@@ -397,7 +407,7 @@
 DIST_COMMON = README $(include_HEADERS) $(kwininclude_HEADERS) \
 	Makefile.am Makefile.in
 DIST_SUBDIRS = $(SUBDIRS)
-SOURCES = $(kwin_la_SOURCES) $(kwin_SOURCES)
+SOURCES = $(kwin_la_SOURCES) $(libkwin_la_SOURCES) $(kwin_SOURCES)
 
 #>- all: all-recursive
 #>+ 1
@@ -446,6 +456,8 @@
 	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
 kwin.la: $(kwin_la_OBJECTS) $(kwin_la_DEPENDENCIES) 
 	$(CXXLINK) -rpath $(libdir) $(kwin_la_LDFLAGS) $(kwin_la_OBJECTS) $(kwin_la_LIBADD) $(LIBS)
+libkwin.la: $(libkwin_la_OBJECTS) $(libkwin_la_DEPENDENCIES) 
+	$(CXXLINK) -rpath $(libdir) $(libkwin_la_LDFLAGS) $(libkwin_la_OBJECTS) $(libkwin_la_LIBADD) $(LIBS)
 install-binPROGRAMS: $(bin_PROGRAMS)
 	@$(NORMAL_INSTALL)
 	$(mkinstalldirs) $(DESTDIR)$(bindir)
@@ -484,6 +496,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/client.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/events.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/killwindow.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/kwin_main.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/kwin_main.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/kwinbutton.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/main.Plo@am__quote@
@@ -694,7 +707,7 @@
 
 #>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 #>+ 4
-KDE_DIST=NEWCOLORSCHEME.README plugins.cpp stdclient_bitmaps.h kwin.upd options.cpp tabbox.h hi48-app-kwin.png pluginlibFix.pl LICENSE main.h hi32-app-kwin.png pop.wav kwinbutton.cpp events.cpp plugins.h killwindow.h kwinbindings.cpp events.h atoms.h eventsrc killwindow.cpp tabbox.cpp hi16-app-kwin.png 
+KDE_DIST=pluginlibFix.pl kwinbutton.cpp kwin.upd events.cpp plugins.h options.cpp LICENSE killwindow.h main.h NEWCOLORSCHEME.README hi32-app-kwin.png tabbox.h hi48-app-kwin.png kwinbindings.cpp plugins.cpp pop.wav stdclient_bitmaps.h events.h atoms.h killwindow.cpp tabbox.cpp eventsrc hi16-app-kwin.png 
 
 DISTFILES= $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
 
@@ -851,12 +864,6 @@
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
 
-#>+ 5
-KWinInterface.kidl: $(srcdir)/KWinInterface.h $(DCOPIDL_DEPENDENCIES)
-	$(DCOPIDL) $(srcdir)/KWinInterface.h > KWinInterface.kidl || ( rm -f KWinInterface.kidl ; /bin/false )
-KWinInterface_skel.cpp: KWinInterface.kidl
-	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub KWinInterface.kidl
-
 #>+ 3
 workspace.moc: $(srcdir)/workspace.h
 	$(MOC) $(srcdir)/workspace.h -o workspace.moc
@@ -881,6 +888,12 @@
 plugins.moc: $(srcdir)/plugins.h
 	$(MOC) $(srcdir)/plugins.h -o plugins.moc
 
+#>+ 5
+KWinInterface.kidl: $(srcdir)/KWinInterface.h $(DCOPIDL_DEPENDENCIES)
+	$(DCOPIDL) $(srcdir)/KWinInterface.h > KWinInterface.kidl || ( rm -f KWinInterface.kidl ; /bin/false )
+KWinInterface_skel.cpp: KWinInterface.kidl
+	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub KWinInterface.kidl
+
 #>+ 3
 clean-metasources:
 	-rm -f  workspace.moc client.moc options.moc tabbox.moc kwinbutton.moc plugins.moc
@@ -915,28 +928,28 @@
 
 
 #>+ 12
-kwin_la_meta_unload.cpp:  workspace.moc client.moc tabbox.moc options.moc kwinbutton.moc plugins.moc
-	@echo 'creating kwin_la_meta_unload.cpp'
-	@-rm -f kwin_la_meta_unload.cpp
+libkwin_la_meta_unload.cpp:  workspace.moc client.moc tabbox.moc options.moc kwinbutton.moc plugins.moc
+	@echo 'creating libkwin_la_meta_unload.cpp'
+	@-rm -f libkwin_la_meta_unload.cpp
 	@if test ${kde_qtver} = 2; then \
-		echo 'static const char * _metalist_kwin_la[] = {' > kwin_la_meta_unload.cpp ;\
-		cat  workspace.moc client.moc tabbox.moc options.moc kwinbutton.moc plugins.moc | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> kwin_la_meta_unload.cpp ;\
-		echo '0};' >> kwin_la_meta_unload.cpp ;\
-		echo '#include <kunload.h>' >> kwin_la_meta_unload.cpp ;\
-		echo '_UNLOAD(kwin_la)' >> kwin_la_meta_unload.cpp ;\
-	else echo > kwin_la_meta_unload.cpp; fi
+		echo 'static const char * _metalist_libkwin_la[] = {' > libkwin_la_meta_unload.cpp ;\
+		cat  workspace.moc client.moc tabbox.moc options.moc kwinbutton.moc plugins.moc | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> libkwin_la_meta_unload.cpp ;\
+		echo '0};' >> libkwin_la_meta_unload.cpp ;\
+		echo '#include <kunload.h>' >> libkwin_la_meta_unload.cpp ;\
+		echo '_UNLOAD(libkwin_la)' >> libkwin_la_meta_unload.cpp ;\
+	else echo > libkwin_la_meta_unload.cpp; fi
 
 
 #>+ 3
 clean-moc-classes:
-	-rm -f  kwin_la_meta_unload.cpp
+	-rm -f  libkwin_la_meta_unload.cpp
 
 #>+ 11
-kwin_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/workspace.cpp $(srcdir)/atoms.cpp $(srcdir)/client.cpp $(srcdir)/main.cpp $(srcdir)/tabbox.cpp $(srcdir)/options.cpp $(srcdir)/plugins.cpp $(srcdir)/events.cpp $(srcdir)/killwindow.cpp $(srcdir)/kwinbutton.cpp KWinInterface_skel.cpp kwin_la_meta_unload.cpp   workspace.moc client.moc options.moc tabbox.moc kwinbutton.moc plugins.moc 
+kwin_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kwin_main.cpp   workspace.moc client.moc options.moc tabbox.moc kwinbutton.moc plugins.moc 
 	@echo 'creating kwin_la.all_cpp.cpp ...'; \
 	rm -f kwin_la.all_cpp.files kwin_la.all_cpp.final; \
 	echo "#define KDE_USE_FINAL 1" >> kwin_la.all_cpp.final; \
-	for file in workspace.cpp atoms.cpp client.cpp main.cpp tabbox.cpp options.cpp plugins.cpp events.cpp killwindow.cpp kwinbutton.cpp KWinInterface_skel.cpp kwin_la_meta_unload.cpp ; do \
+	for file in kwin_main.cpp ; do \
 	  echo "#include \"$$file\"" >> kwin_la.all_cpp.files; \
 	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kwin_la.all_cpp.final; \
 	done; \
@@ -944,6 +957,18 @@
 	rm -f kwin_la.all_cpp.final kwin_la.all_cpp.files
 
 #>+ 11
+libkwin_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/workspace.cpp $(srcdir)/atoms.cpp $(srcdir)/client.cpp $(srcdir)/main.cpp $(srcdir)/tabbox.cpp $(srcdir)/options.cpp $(srcdir)/plugins.cpp $(srcdir)/events.cpp $(srcdir)/killwindow.cpp $(srcdir)/kwinbutton.cpp KWinInterface_skel.cpp libkwin_la_meta_unload.cpp  
+	@echo 'creating libkwin_la.all_cpp.cpp ...'; \
+	rm -f libkwin_la.all_cpp.files libkwin_la.all_cpp.final; \
+	echo "#define KDE_USE_FINAL 1" >> libkwin_la.all_cpp.final; \
+	for file in workspace.cpp atoms.cpp client.cpp main.cpp tabbox.cpp options.cpp plugins.cpp events.cpp killwindow.cpp kwinbutton.cpp KWinInterface_skel.cpp libkwin_la_meta_unload.cpp ; do \
+	  echo "#include \"$$file\"" >> libkwin_la.all_cpp.files; \
+	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkwin_la.all_cpp.final; \
+	done; \
+	cat libkwin_la.all_cpp.final libkwin_la.all_cpp.files  > libkwin_la.all_cpp.cpp; \
+	rm -f libkwin_la.all_cpp.final libkwin_la.all_cpp.files
+
+#>+ 11
 kwin.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kwin_main.cpp  
 	@echo 'creating kwin.all_cpp.cpp ...'; \
 	rm -f kwin.all_cpp.files kwin.all_cpp.final; \
@@ -957,20 +982,20 @@
 
 #>+ 3
 clean-final:
-	-rm -f kwin_la.all_cpp.cpp kwin.all_cpp.cpp
+	-rm -f kwin_la.all_cpp.cpp libkwin_la.all_cpp.cpp kwin.all_cpp.cpp
 
 #>+ 2
 final:
-	$(MAKE) kwin_la_OBJECTS="$(kwin_la_final_OBJECTS)" all-am
+	$(MAKE) libkwin_la_OBJECTS="$(libkwin_la_final_OBJECTS)" all-am
 #>+ 2
 final-install:
-	$(MAKE) kwin_la_OBJECTS="$(kwin_la_final_OBJECTS)" install-am
+	$(MAKE) libkwin_la_OBJECTS="$(libkwin_la_final_OBJECTS)" install-am
 #>+ 2
 no-final:
-	$(MAKE) kwin_la_OBJECTS="$(kwin_la_nofinal_OBJECTS)" all-am
+	$(MAKE) libkwin_la_OBJECTS="$(libkwin_la_nofinal_OBJECTS)" all-am
 #>+ 2
 no-final-install:
-	$(MAKE) kwin_la_OBJECTS="$(kwin_la_nofinal_OBJECTS)" install-am
+	$(MAKE) libkwin_la_OBJECTS="$(libkwin_la_nofinal_OBJECTS)" install-am
 #>+ 3
 cvs-clean:
 	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean
