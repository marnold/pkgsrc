$NetBSD: patch-aw,v 1.3.4.1 2004/08/13 13:05:05 agc Exp $

Index: khtml/khtml_part.h
===================================================================
RCS file: /home/kde/kdelibs/khtml/khtml_part.h,v
retrieving revision 1.248.2.5
diff -u -p -r1.248.2.5 khtml_part.h
--- khtml/khtml_part.h	29 Jun 2004 09:08:16 -0000	1.248.2.5
+++ khtml/khtml_part.h	3 Aug 2004 14:36:47 -0000
@@ -287,6 +287,7 @@ public:
    */
   KParts::BrowserExtension *browserExtension() const;
   KParts::LiveConnectExtension *liveConnectExtension( const khtml::RenderPart *) const;
+  KParts::BrowserHostExtension *browserHostExtension() const;
 
   /**
    * Returns a pointer to the HTML document's view.
@@ -812,6 +813,16 @@ public:
   KHTMLPart *findFrame( const QString &f );
 
   /**
+   * @internal
+   * Recursively finds the part containing the frame with name @p f 
+   * and checks if it is accessible by @p callingPart
+   * Returns 0L if no suitable frame can't be found.
+   * Returns parent part if a suitable frame was found and
+   * frame info in @p *childFrame
+   */
+  KHTMLPart *findFrameParent( KParts::ReadOnlyPart *callingPart, const QString &f, khtml::ChildFrame **childFrame=0 );
+
+  /**
    * Return the current frame (the one that has focus)
    * Not necessarily a direct child of ours, framesets can be nested.
    * Returns "this" if this part isn't a frameset.
@@ -1376,6 +1387,8 @@ private:
 
   bool restoreURL( const KURL &url );
   void emitSelectionChanged();
+  // Returns whether callingHtmlPart may access this part
+  bool checkFrameAccess(KHTMLPart *callingHtmlPart);
   bool openURLInFrame( const KURL &url, const KParts::URLArgs &urlArgs );
   void startAutoScroll();
   void stopAutoScroll();
@@ -1434,7 +1447,7 @@ private:
   DOM::DocumentImpl *xmlDocImpl() const;
   khtml::ChildFrame *frame( const QObject *obj );
 
-  khtml::ChildFrame *recursiveFrameRequest( const KURL &url, const KParts::URLArgs &args, bool callParent = true );
+  khtml::ChildFrame *recursiveFrameRequest( KHTMLPart *callingHtmlPart, const KURL &url, const KParts::URLArgs &args, bool callParent = true );
 
   bool checkLinkSecurity( const KURL &linkURL,const QString &message = QString::null, const QString &button = QString::null );
   QVariant executeScript( const QString& filename, int baseLine, const DOM::Node &n, const QString& script );
