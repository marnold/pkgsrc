$NetBSD: patch-aa,v 1.1.1.1 2002/09/27 15:24:36 rh Exp $

--- Tools/gsnd/portaudio/pa_unix_oss/pa_unix_oss.c.orig	Wed Jul 31 03:02:32 2002
+++ Tools/gsnd/portaudio/pa_unix_oss/pa_unix_oss.c
@@ -573,8 +573,10 @@ static int PaHost_CanaryProc( PaHostSoun
 static PaError PaHost_WatchDogProc( PaHostSoundControl   *pahsc )
 {
     PaError               result = 0;
+#ifndef _PTH_PTHREAD_H_
     struct sched_param    schp = { 0 };
     int                   maxPri;
+#endif
 
 #ifdef GNUSTEP
     GSRegisterCurrentThread(); /* SB20010904 */
@@ -582,6 +584,7 @@ static PaError PaHost_WatchDogProc( PaHo
     
 /* Run at a priority level above audio thread so we can still run if it hangs. */
 /* Rise more than 1 because of rumored off-by-one scheduler bugs. */
+#ifndef _PTH_PTHREAD_H_
     schp.sched_priority = pahsc->pahsc_AudioPriority + 4;
     maxPri = sched_get_priority_max(SCHEDULER_POLICY);
     if( schp.sched_priority > maxPri ) schp.sched_priority = maxPri;
@@ -591,6 +594,7 @@ static PaError PaHost_WatchDogProc( PaHo
         ERR_RPT(("PaHost_WatchDogProc: cannot set watch dog priority!\n"));
         goto killAudio;
     }
+#endif
     
     /* Compare watchdog time with audio and canary thread times. */
     /* Sleep for a while or until thread cancelled. */
@@ -625,6 +629,7 @@ static PaError PaHost_WatchDogProc( PaHo
     return 0;
     
 lowerAudio:
+#ifndef _PTH_PTHREAD_H_
     {
         struct sched_param    schat = { 0 };
         if( sched_setscheduler(pahsc->pahsc_AudioThreadPID, SCHED_OTHER, &schat) != 0)
@@ -638,6 +643,7 @@ lowerAudio:
             goto cleanup;
         }
     }
+#endif
     
 killAudio:
     ERR_RPT(("PaHost_WatchDogProc: killing hung audio thread!\n"));
@@ -732,7 +738,9 @@ static PaError PaHost_BoostPriority( int
 {
     PaHostSoundControl  *pahsc;
     PaError              result = paNoError;
+#ifndef _PTH_PTHREAD_H_
     struct sched_param   schp = { 0 };
+#endif
     
     pahsc = (PaHostSoundControl *) past->past_DeviceData;
     if( pahsc == NULL ) return paInternalError;
@@ -740,6 +748,7 @@ static PaError PaHost_BoostPriority( int
     pahsc->pahsc_AudioThreadPID = getpid();
     DBUG(("PaHost_BoostPriority: audio PID = %d\n", pahsc->pahsc_AudioThreadPID ));
     
+#ifndef _PTH_PTHREAD_H_
     /* Choose a priority in the middle of the range. */
     pahsc->pahsc_AudioPriority = (sched_get_priority_max(SCHEDULER_POLICY) -
                                   sched_get_priority_min(SCHEDULER_POLICY)) / 2;
@@ -755,6 +764,7 @@ static PaError PaHost_BoostPriority( int
         /* We are running at high priority so we should have a watchdog in case audio goes wild. */
         result = PaHost_StartWatchDog( pahsc );
     }
+#endif
     
     return result;
 }
