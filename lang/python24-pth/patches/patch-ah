$NetBSD: patch-ah,v 1.1.1.1 2004/12/05 23:28:56 recht Exp $

--- Modules/_cursesmodule.c.orig	Wed Aug  4 16:33:28 2004
+++ Modules/_cursesmodule.c
@@ -313,17 +313,9 @@ Window_OneArgNoReturnFunction(wattroff, 
 Window_OneArgNoReturnFunction(wattrset, attr_t, "l;attr")
 Window_OneArgNoReturnFunction(clearok, int, "i;True(1) or False(0)")
 Window_OneArgNoReturnFunction(idlok, int, "i;True(1) or False(0)")
-#if defined(__NetBSD__)
-Window_OneArgNoReturnVoidFunction(keypad, int, "i;True(1) or False(0)")
-#else
 Window_OneArgNoReturnFunction(keypad, int, "i;True(1) or False(0)")
-#endif
 Window_OneArgNoReturnFunction(leaveok, int, "i;True(1) or False(0)")
-#if defined(__NetBSD__)
-Window_OneArgNoReturnVoidFunction(nodelay, int, "i;True(1) or False(0)")
-#else
 Window_OneArgNoReturnFunction(nodelay, int, "i;True(1) or False(0)")
-#endif
 Window_OneArgNoReturnFunction(notimeout, int, "i;True(1) or False(0)")
 Window_OneArgNoReturnFunction(scrollok, int, "i;True(1) or False(0)")
 Window_OneArgNoReturnFunction(winsdelln, int, "i;nlines")
@@ -784,11 +776,7 @@ PyCursesWindow_GetKey(PyCursesWindowObje
   } else if (rtn<=255)
     return Py_BuildValue("c", rtn);
   else
-#if defined(__NetBSD__)
-    return PyString_FromString(unctrl(rtn));
-#else
     return PyString_FromString((char *)keyname(rtn));
-#endif
 }
 
 static PyObject *
@@ -1946,7 +1934,6 @@ PyCurses_IntrFlush(PyObject *self, PyObj
   return PyCursesCheckERR(intrflush(NULL,ch), "intrflush");
 }
 
-#if !defined(__NetBSD__)
 static PyObject *
 PyCurses_KeyName(PyObject *self, PyObject *args)
 {
@@ -1965,7 +1952,6 @@ PyCurses_KeyName(PyObject *self, PyObjec
 
   return PyString_FromString((knp == NULL) ? "" : (char *)knp);
 }
-#endif
 
 static PyObject *  
 PyCurses_KillChar(PyObject *self)  
@@ -2410,9 +2396,7 @@ static PyMethodDef PyCurses_methods[] = 
   {"initscr",             (PyCFunction)PyCurses_InitScr, METH_NOARGS},
   {"intrflush",           (PyCFunction)PyCurses_IntrFlush, METH_VARARGS},
   {"isendwin",            (PyCFunction)PyCurses_isendwin, METH_NOARGS},
-#if !defined(__NetBSD__)
   {"keyname",             (PyCFunction)PyCurses_KeyName, METH_VARARGS},
-#endif
   {"killchar",            (PyCFunction)PyCurses_KillChar, METH_NOARGS}, 
   {"longname",            (PyCFunction)PyCurses_longname, METH_NOARGS}, 
   {"meta",                (PyCFunction)PyCurses_Meta, METH_VARARGS},
@@ -2511,9 +2495,7 @@ init_curses(void)
 	SetDictInt("A_DIM",		A_DIM);
 	SetDictInt("A_BOLD",		A_BOLD);
 	SetDictInt("A_ALTCHARSET",	A_ALTCHARSET);
-#if !defined(__NetBSD__)
 	SetDictInt("A_INVIS",           A_INVIS);
-#endif
 	SetDictInt("A_PROTECT",         A_PROTECT);
 	SetDictInt("A_CHARTEXT",        A_CHARTEXT);
 	SetDictInt("A_COLOR",           A_COLOR);
@@ -2585,7 +2567,6 @@ init_curses(void)
 	  int key;
 	  char *key_n;
 	  char *key_n2;
-#if !defined(__NetBSD__)
 	  for (key=KEY_MIN;key < KEY_MAX; key++) {
 	    key_n = (char *)keyname(key);
 	    if (key_n == NULL || strcmp(key_n,"UNKNOWN KEY")==0)
@@ -2609,7 +2590,6 @@ init_curses(void)
 	    if (key_n2 != key_n)
 	      free(key_n2);
 	  }
-#endif
 	  SetDictInt("KEY_MIN", KEY_MIN);
 	  SetDictInt("KEY_MAX", KEY_MAX);
 	}
