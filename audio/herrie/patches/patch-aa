$NetBSD: patch-aa,v 1.1.1.1 2007/11/08 03:52:30 bjs Exp $

--- configure.orig	2007-09-23 09:21:10.000000000 -0400
+++ configure
@@ -33,7 +33,7 @@ APP_LINGUAS='de ga nl pl ru sv tr vi'
 CFG_AO=ao
 unset CFG_BINEXT
 CFG_CURSES_HEADER=ncurses
-CFG_CURSES_LIB=ncursesw
+CFG_CURSES_LIB=ncurses
 CFG_FTELLO=yes
 CFG_HTTP=yes
 CFG_MODPLUG=yes
@@ -63,7 +63,7 @@ Darwin)
 	LDFLAGS="$LDFLAGS -lresolv"
 	[ "$PREFIX" = "" ] && PREFIX=/opt/local
 	;;
-FreeBSD)
+FreeBSD|DragonFly)
 	CFG_AO=oss
 	CFG_SETPROCTITLE=yes
 	[ "$PREFIX" = "" ] && PREFIX=/usr/local
@@ -97,7 +97,6 @@ Windows)
 	unset CFG_FTELLO
 	unset CFG_HTTP
 	unset CFG_MODPLUG
-	unset CFG_REGEX
 	CFG_CURSES_HEADER=curses
 	CFG_CURSES_LIB=pdcurses
 	;;
@@ -178,7 +177,7 @@ done
 [ "$CFLAGS" = "" ] && CFLAGS="-O"
 CFLAGS="$CFLAGS `pkg-config --cflags glib-2.0 gthread-2.0` \
     -DAPP_NAME=\\\"$APP_NAME\\\" -DAPP_VERSION=\\\"$APP_VERSION\\\" \
-    -I$PREFIX/include -I$PREFIX/include/ncurses \
+    -I$PREFIX/include/ncurses -I$PREFIX/include \
     -DCURSES_HEADER=\\<$CFG_CURSES_HEADER.h\\>"
 if [ $? -ne 0 ]
 then
@@ -205,7 +204,7 @@ then
 	if [ "$CFG_SCROBBLER" != "" ]
 	then
 		case $OS in
-		FreeBSD)
+		FreeBSD|DragonFly)
 			LDFLAGS="$LDFLAGS -lmd"
 			;;
 		NetBSD|OpenBSD)
@@ -321,14 +320,14 @@ oss)
 	case $OS in
 	NetBSD|OpenBSD)
 		CFLAGS="$CFLAGS -DOSS_HEADER=\\<soundcard.h\\>"
-		CFLAGS_config="-DOSS_DEVICE=\\\"/dev/audio\\\""
-		LDFLAGS="$LDFLAGS -lossaudio"
+		CFLAGS_config="-DOSS_DEVICE=\\\"$DEVOSSAUDIO\\\""
+		LDFLAGS="$LDFLAGS"
 		;;
 	*)
 		# The OSS-through-ALSA compat may generate noise
 		[ "$OS" = "Linux" ] && CFLAGS_main="$CFLAGS_main -DCLOSE_STDERR"
 		CFLAGS="$CFLAGS -DOSS_HEADER=\\<sys/soundcard.h\\>"
-		CFLAGS_config="-DOSS_DEVICE=\\\"/dev/dsp\\\""
+		CFLAGS_config="-DOSS_DEVICE=\\\"$DEVOSSAUDIO\\\""
 		;;
 	esac
 	;;
@@ -361,7 +360,7 @@ echo "- Using $CFG_AO audio output"
 echo
 
 # Perform a simple compiler test
-eval $CC $SRCDIR/src/conftest.c $CFLAGS $LDFLAGS -o conftest$CFG_BINEXT
+eval ${LIBTOOL} --mode=link $CC $SRCDIR/src/conftest.c $CFLAGS $LDFLAGS -o conftest$CFG_BINEXT
 if [ $? -ne 0 ]
 then
 	echo "Error: some dependencies are missing; please see README for a list"
@@ -382,10 +381,10 @@ done
 all: $APP_NAME$CFG_BINEXT $APP_NAME.1.gz $SRCDIR/$APP_NAME.conf.sample $MOS
 $APP_NAME$CFG_BINEXT: $OBJS
 	# Linking $APP_NAME$CFG_BINEXT
-	$DOIT$CC $OBJS $LDFLAGS -o $APP_NAME$CFG_BINEXT
+	$DOIT\${LIBTOOL} --mode=link $CC $OBJS $LDFLAGS -o $APP_NAME$CFG_BINEXT
 $APP_NAME.1.gz: $SRCDIR/$APP_NAME.1 Makefile
-	# Generating manual page $APP_NAME.1.gz
-	${DOIT}sed -e 's|%%CONFFILE%%|$CONFFILE|' $SRCDIR/$APP_NAME.1 | gzip -9 > $APP_NAME.1.gz
+	# Generating manual page $APP_NAME.1
+	${DOIT}sed -e 's|%%CONFFILE%%|$CONFFILE|' $SRCDIR/$APP_NAME.1 > $APP_NAME.1.tmp && mv $SRCDIR/$APP_NAME.1.tmp $SRCDIR/$APP_NAME.1
 clean:
 	# Removing $APP_NAME$CFG_BINEXT $APP_NAME.1.gz *.mo *.o
 	${DOIT}rm -f $APP_NAME$CFG_BINEXT $APP_NAME.1.gz *.mo *.o
@@ -394,29 +393,29 @@ distclean: clean
 	${DOIT}rm -f Makefile
 install: all
 	# Installing \$(DESTDIR)$BINDIR/$APP_NAME$CFG_BINEXT
-	${DOIT}mkdir -p \$(DESTDIR)$BINDIR
-	$DOIT$INSTALL $CFG_STRIP $APP_NAME$CFG_BINEXT \$(DESTDIR)$BINDIR/$APP_NAME$CFG_BINEXT
+	${DOIT}\${BSD_INSTALL_PROGRAM_DIR} \$(DESTDIR)$BINDIR
+	$DOIT\${BSD_INSTALL_PROGRAM} $CFG_STRIP $APP_NAME$CFG_BINEXT \$(DESTDIR)$BINDIR/$APP_NAME$CFG_BINEXT
 	# Installing \$(DESTDIR)$MANDIR/man1/$APP_NAME.1.gz
-	${DOIT}mkdir -p \$(DESTDIR)$MANDIR/man1
-	$DOIT$INSTALL -m 444 $APP_NAME.1.gz \$(DESTDIR)$MANDIR/man1/$APP_NAME.1.gz
+	${DOIT}\${BSD_INSTALL_MAN_DIR} \$(DESTDIR)$MANDIR/man1
+	$DOIT\${BSD_INSTALL_MAN} $APP_NAME.1 \$(DESTDIR)$MANDIR/man1/$APP_NAME.1
 	# Installing \$(DESTDIR)$CONFDIR/$APP_NAME.conf.sample
-	${DOIT}mkdir -p \$(DESTDIR)$CONFDIR
-	$DOIT$INSTALL -m 444 $SRCDIR/$APP_NAME.conf.sample \$(DESTDIR)$CONFDIR/$APP_NAME.conf.sample
+	#${DOIT}\${BSD_INSTALL_DATA_DIR} \$(DESTDIR)$CONFDIR
+	#$DOIT$\${BSD_INSTALL_DATA} $SRCDIR/$APP_NAME.conf.sample \$(DESTDIR)$CONFDIR/$APP_NAME.conf
 EOF
 for i in $CFG_LINGUAS
 do
 	echo "	# Installing \$(DESTDIR)$TRANSDIR/$i/LC_MESSAGES/$APP_NAME.mo"
-	echo "	${DOIT}mkdir -p \$(DESTDIR)$TRANSDIR/$i/LC_MESSAGES"
-	echo "	$DOIT$INSTALL -m 444 $i.mo \$(DESTDIR)$TRANSDIR/$i/LC_MESSAGES/$APP_NAME.mo"
+	echo "	${DOIT}\${BSD_INSTALL_DATA_DIR} \$(DESTDIR)$TRANSDIR/$i/LC_MESSAGES"
+	echo "	$DOIT\${BSD_INSTALL_DATA} $i.mo \$(DESTDIR)$TRANSDIR/$i/LC_MESSAGES/$APP_NAME.mo"
 done
 cat << EOF
 uninstall:
 	# Uninstalling \$(DESTDIR)$BINDIR/$APP_NAME$CFG_BINEXT
 	${DOIT}rm -f \$(DESTDIR)$BINDIR/$APP_NAME$CFG_BINEXT
-	# Uninstalling \$(DESTDIR)$MANDIR/man1/$APP_NAME.1.gz
-	${DOIT}rm -f \$(DESTDIR)$MANDIR/man1/$APP_NAME.1.gz
-	# Uninstalling \$(DESTDIR)$CONFDIR/$APP_NAME.conf.sample
-	${DOIT}rm -f  \$(DESTDIR)$CONFDIR/$APP_NAME.conf.sample
+	# Uninstalling \$(DESTDIR)$MANDIR/man1/$APP_NAME.1
+	${DOIT}rm -f \$(DESTDIR)$MANDIR/man1/$APP_NAME.1
+	# Uninstalling \$(DESTDIR)$EGDIR/$APP_NAME.conf
+	${DOIT}rm -f  \$(DESTDIR)$EGDIR/$APP_NAME.conf
 EOF
 for i in $CFG_LINGUAS
 do
@@ -433,7 +432,7 @@ do
 	done
 	echo "$i.o: Makefile $SRCDIR/src/$i.c $SRCDIR/src/stdinc.h $DEPS"
 	echo "	# Compiling $i.o"
-	echo "	$DOIT$CC -c $SRCDIR/src/$i.c $CFLAGS `eval echo \\\$CFLAGS_\$i` -o $i.o"
+	echo "	$DOIT\${LIBTOOL} --mode=compile $CC -c $SRCDIR/src/$i.c $CFLAGS `eval echo \\\$CFLAGS_\$i` -o $i.o"
 done
 for i in $CFG_LINGUAS
 do
