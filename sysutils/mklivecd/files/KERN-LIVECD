#	$Id: KERN-LIVECD,v 1.1.1.1 2004/02/26 03:58:53 xtraeme Exp $

include "arch/i386/conf/std.i386"

makeoptions	COPTS="-Os"	# Optimise for space. Implies -O2
maxusers	8		# estimated number of users
options 	I686_CPU
options 	INSECURE	# disable kernel security levels
options 	RTC_OFFSET=0	# hardware clock is this many mins. west of GMT
options 	USERCONF	# userconf(4) support
#options 	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
#options 	MALLOC_NOINLINE	# Not inlining MALLOC saves memory

#options 	DDB			# in-kernel debugger
#options 	DDB_HISTORY_SIZE=512	# enable history editing in DDB
#options 	COMPAT_16		# NetBSD 1.6
#options 	COMPAT_386BSD_MBRPART	# recognize old partition ID

# File systems
file-system 	FFS		# UFS
file-system     UNION           # union file system
file-system 	MFS		# memory file system
file-system 	NFS		# Network File System client
file-system 	CD9660		# ISO 9660 + Rock Ridge file system
file-system     SMBFS           # smbfs file system
file-system     MSDOSFS         # MS-DOS file system

#options 	VNODE_OP_NOINLINE   # Not inlining vnode op calls saves mem

# Networking options
options 	INET		# IP + ICMP + TCP + UDP
options 	INET6		# IPv6

options         SYSVMSG         # System V-like message queues
options         SYSVSEM         # System V-like semaphores
options         SYSVSHM         # System V-like memory sharing
options         P1003_1B_SEMAPHORE      # p1003.1b semaphore support

# wscons options
#
# builtin terminal emulations 
options 	WSEMUL_VT100		# VT100 / VT220 emulation
options 	WS_KERNEL_FG=WSCOL_MAGENTA
options		WSDISPLAY_COMPAT_SYSCONS
options         WSDISPLAY_COMPAT_PCVT           # emulate some ioctls
options         WSDISPLAY_COMPAT_USL            # VT handling
options         WSDISPLAY_COMPAT_RAWKBD         # can get raw scancodes

# Kernel root file system and dump configuration.
config		netbsd	root on cd0a type cd9660 dumps on none

# Device configuration
mainbus0 at root

cpu* at mainbus?
acpi0           at mainbus0

# ACPI devices
acpibut*       at acpi?                # ACPI Button
acpiec*        at acpi?                # ACPI Embedded Controller
acpilid*       at acpi?                # ACPI Lid Switch

# Mainboard devices
com*           at acpi?                # Serial communications interface
lpt*           at acpi?                # Parallel port
npx*           at acpi?                # Math coprocessor
pckbc*         at acpi?                # PC keyboard controller

# Basic Bus Support

# PCI bus support
pci*	at mainbus? bus ?
pci*	at pchb? bus ?
pci*	at ppb? bus ?

# PCI bridges
pchb*	at pci? dev ? function ?	# PCI-Host bridges
pcib*	at pci? dev ? function ?	# PCI-ISA bridges
ppb*	at pci? dev ? function ?	# PCI-PCI bridges

# ISA bus support
isa0	at mainbus?
isa0	at pcib?

# wscons
pckbd*          at pckbc?               # PC keyboard
pms*            at pckbc?               # PS/2 mouse for wsmouse
vga*            at pci? dev ? function ?
wsdisplay*      at vga? console ?
wskbd*          at pckbd? console ?
wsmouse*        at pms? mux 0

# IDE and related devices
# PCI IDE controllers - see pciide(4) for supported hardware.
# The 0x0001 flag force the driver to use DMA, even if the driver doesn't know
# how to set up DMA modes for this chip. This may work, or may cause
# a machine hang with some controllers.
viaide*         at pci? dev ? function ?        # VIA/AMD/Nvidia IDE controllers

# IDE drives
# Flags are used only with controllers that support DMA operations
# and mode settings (e.g. some pciide controllers)
# The lowest order four bits (rightmost digit) of the flags define the PIO
# mode to use, the next set of four bits the DMA mode and the third set the
# UltraDMA mode. For each set of four bits, the 3 lower bits define the mode
# to use, and the last bit must be 1 for this setting to be used.
# For DMA and UDMA, 0xf (1111) means 'disable'.
# 0x0fac means 'use PIO mode 4, DMA mode 2, disable UltraDMA'.
# (0xc=1100, 0xa=1010, 0xf=1111)
# 0x0000 means "use whatever the drive claims to support".
atabus* at ata?
wd*	at atabus? drive ? flags 0x0000

# ATAPI bus support
atapibus* at atapi?

# ATAPI devices
# flags have the same meaning as for IDE drives.
cd*	at atapibus? drive ? flags 0x0000	# ATAPI CD-ROM drives

# Network Interfaces

# PCI network interfaces
rtk*	at pci?	dev ? function ?	# Realtek
ex*     at pci? dev ? function ?        # 3Com 90x[BC]

# MII/PHY support
ukphy*  at mii? phy ?                   # generic unknown PHYs


# Audio Devices

# PCI audio devices
auvia*  at pci? dev ? function ?        # VIA VT82C686A integrated AC'97 Audio

# Audio support
audio*  at audiobus?

# USB Controller and Devices

# PCI USB controllers
# The EHCI is not ready for prime time.
#ehci*	at pci?	dev ? function ?	# Enhanced Host Controller
ohci*	at pci?	dev ? function ?	# Open Host Controller
uhci*	at pci?	dev ? function ?	# Universal Host Controller (Intel)

# USB bus support
#usb*	at ehci?
usb*	at ohci?
usb*	at uhci?

# USB Hubs
uhub*	at usb?
uhub*	at uhub? port ? configuration ? interface ?

# USB HID device
uhidev*	at uhub? port ? configuration ? interface ?

# USB Mice
ums*	at uhidev? reportid ?
wsmouse* at ums? mux 0

# USB Keyboards
ukbd*	at uhidev? reportid ?
wskbd*	at ukbd? console ? mux 1

# USB Generic HID devices
uhid*	at uhidev? reportid ?

# USB Printer
ulpt*	at uhub? port ? configuration ? interface ?

# USB Modem
umodem*	at uhub? port ? configuration ?
ucom*	at umodem?

# USB Mass Storage
umass*	at uhub? port ? configuration ? interface ?
wd* at umass?

# USB Generic driver
ugen*	at uhub? port ?

# Pseudo-Devices

# disk/mass storage pseudo-devices
#pseudo-device  md              1       # memory disk device (ramdisk)
pseudo-device   vnd             4       # disk-like interface to files

# network pseudo-devices
pseudo-device   bpfilter        8       # Berkeley packet filter
pseudo-device   loop                    # network loopback

# miscellaneous pseudo-devices
pseudo-device   pty             2       # pseudo-terminals (Sysinst needs two)
pseudo-device   rnd                     # /dev/random and in-kernel generator

# wscons pseudo-devices
pseudo-device   wsmux                   # mouse & keyboard multiplexor

# a pseudo device needed for SMBFS
pseudo-device   nsmb                    # experimental - SMB requester
