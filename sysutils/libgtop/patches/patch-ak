$NetBSD: patch-ak,v 1.1.1.1 1998/10/07 13:11:35 agc Exp $

--- sysdeps/bsd/procmap.c	1998/10/07 12:03:03	1.1
+++ sysdeps/bsd/procmap.c	1998/10/07 12:09:41
@@ -33,6 +33,9 @@
 #include <vm/vm_object.h>
 #include <vm/vm_prot.h>
 #include <vm/vm_map.h>
+#ifdef __NetBSD__
+#include <vm/vnode_pager.h>
+#endif
 
 #include <sys/vnode.h>
 #include <sys/mount.h>
@@ -130,8 +133,16 @@
 			update = 1;
 		}
 
+#ifdef __FreeBSD__
 		if (entry.eflags & (MAP_ENTRY_IS_A_MAP|MAP_ENTRY_IS_SUB_MAP))
 			continue;
+#elseif defined(UVM)
+		if (entry.eflags & (MAP_ENTRY_IS_A_MAP|MAP_ENTRY_IS_SUB_MAP))
+			continue;
+#else
+		if (entry.is_a_map || entry.is_sub_map)
+			continue;
+#endif
 
 		maps [i].flags  = _glibtop_sysdeps_map_entry;
 
@@ -162,16 +173,26 @@
 
 		/* If the object is of type vnode, add its size */
 
+#ifdef __FreeBSD__
 		if (object.type != OBJT_VNODE)
 			continue;
-
 		if (!object.handle)
 			continue;
-		
 		if (kvm_read (server->machine.kd,
 			      (unsigned long) object.handle,
 			      &vnode, sizeof (vnode)) != sizeof (vnode))
 			glibtop_error_io_r (server, "kvm_read (vnode)");
+#else
+		if (object.pager->pg_type != PG_VNODE)
+			continue;
+		if (!object.pager->pg_handle)
+			continue;
+		if (kvm_read (server->machine.kd,
+			      (unsigned long) object.pager->pg_handle,
+			      &vnode, sizeof (vnode)) != sizeof (vnode))
+			glibtop_error_io_r (server, "kvm_read (vnode)");
+#endif
+
 
 		if ((vnode.v_type != VREG) || (vnode.v_tag != VT_UFS) ||
 		    !vnode.v_data) continue;
