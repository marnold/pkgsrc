$NetBSD: patch-aa,v 1.1.1.1 2003/04/30 00:03:39 jtb Exp $

--- examples/Makefile.in.orig
+++ examples/Makefile.in
@@ -104,7 +104,7 @@
 INCLUDES = -I$(top_srcdir)
 LDADD = -L$(top_srcdir)/lib -lblitz
 
-examplesdir = $(prefix)/examples
+examplesdir = $(prefix)/share/examples/blitz
 examples_DATA = array.cpp cartesian.cpp cast.cpp cfd.cpp complex-test.cpp \
 convolve.cpp curldiv.cpp deriv.cpp diff.cpp erf.cpp fixed.cpp indirect.cpp \
 io.cpp iter.cpp matmult.cpp nested.cpp numinquire.cpp outer.cpp pauli.cpp \
@@ -118,7 +118,7 @@
 deriv diff erf fixed indirect io iter matmult nested numinquire outer pauli \
 pick polymorph prettyprint qcd rand2 random rangexpr reduce simple \
 slicing stencil2 stencil3 stencil stencilet storage tiny \
-transform useret where whitt 
+transform useret where whitt
 
 
 array_SOURCES = array.cpp
@@ -418,121 +418,121 @@
 	  $(AUTOMAKE) --gnu  --ignore-deps examples/Makefile
 Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
 	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
-array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES) 
+array$(EXEEXT): $(array_OBJECTS) $(array_DEPENDENCIES)
 	@rm -f array$(EXEEXT)
 	$(CXXLINK) $(array_LDFLAGS) $(array_OBJECTS) $(array_LDADD) $(LIBS)
-cartesian$(EXEEXT): $(cartesian_OBJECTS) $(cartesian_DEPENDENCIES) 
+cartesian$(EXEEXT): $(cartesian_OBJECTS) $(cartesian_DEPENDENCIES)
 	@rm -f cartesian$(EXEEXT)
 	$(CXXLINK) $(cartesian_LDFLAGS) $(cartesian_OBJECTS) $(cartesian_LDADD) $(LIBS)
-cast$(EXEEXT): $(cast_OBJECTS) $(cast_DEPENDENCIES) 
+cast$(EXEEXT): $(cast_OBJECTS) $(cast_DEPENDENCIES)
 	@rm -f cast$(EXEEXT)
 	$(CXXLINK) $(cast_LDFLAGS) $(cast_OBJECTS) $(cast_LDADD) $(LIBS)
-cfd$(EXEEXT): $(cfd_OBJECTS) $(cfd_DEPENDENCIES) 
+cfd$(EXEEXT): $(cfd_OBJECTS) $(cfd_DEPENDENCIES)
 	@rm -f cfd$(EXEEXT)
 	$(CXXLINK) $(cfd_LDFLAGS) $(cfd_OBJECTS) $(cfd_LDADD) $(LIBS)
-complex-test$(EXEEXT): $(complex_test_OBJECTS) $(complex_test_DEPENDENCIES) 
+complex-test$(EXEEXT): $(complex_test_OBJECTS) $(complex_test_DEPENDENCIES)
 	@rm -f complex-test$(EXEEXT)
 	$(CXXLINK) $(complex_test_LDFLAGS) $(complex_test_OBJECTS) $(complex_test_LDADD) $(LIBS)
-convolve$(EXEEXT): $(convolve_OBJECTS) $(convolve_DEPENDENCIES) 
+convolve$(EXEEXT): $(convolve_OBJECTS) $(convolve_DEPENDENCIES)
 	@rm -f convolve$(EXEEXT)
 	$(CXXLINK) $(convolve_LDFLAGS) $(convolve_OBJECTS) $(convolve_LDADD) $(LIBS)
-curldiv$(EXEEXT): $(curldiv_OBJECTS) $(curldiv_DEPENDENCIES) 
+curldiv$(EXEEXT): $(curldiv_OBJECTS) $(curldiv_DEPENDENCIES)
 	@rm -f curldiv$(EXEEXT)
 	$(CXXLINK) $(curldiv_LDFLAGS) $(curldiv_OBJECTS) $(curldiv_LDADD) $(LIBS)
-deriv$(EXEEXT): $(deriv_OBJECTS) $(deriv_DEPENDENCIES) 
+deriv$(EXEEXT): $(deriv_OBJECTS) $(deriv_DEPENDENCIES)
 	@rm -f deriv$(EXEEXT)
 	$(CXXLINK) $(deriv_LDFLAGS) $(deriv_OBJECTS) $(deriv_LDADD) $(LIBS)
-diff$(EXEEXT): $(diff_OBJECTS) $(diff_DEPENDENCIES) 
+diff$(EXEEXT): $(diff_OBJECTS) $(diff_DEPENDENCIES)
 	@rm -f diff$(EXEEXT)
 	$(CXXLINK) $(diff_LDFLAGS) $(diff_OBJECTS) $(diff_LDADD) $(LIBS)
-erf$(EXEEXT): $(erf_OBJECTS) $(erf_DEPENDENCIES) 
+erf$(EXEEXT): $(erf_OBJECTS) $(erf_DEPENDENCIES)
 	@rm -f erf$(EXEEXT)
 	$(CXXLINK) $(erf_LDFLAGS) $(erf_OBJECTS) $(erf_LDADD) $(LIBS)
-fixed$(EXEEXT): $(fixed_OBJECTS) $(fixed_DEPENDENCIES) 
+fixed$(EXEEXT): $(fixed_OBJECTS) $(fixed_DEPENDENCIES)
 	@rm -f fixed$(EXEEXT)
 	$(CXXLINK) $(fixed_LDFLAGS) $(fixed_OBJECTS) $(fixed_LDADD) $(LIBS)
-indirect$(EXEEXT): $(indirect_OBJECTS) $(indirect_DEPENDENCIES) 
+indirect$(EXEEXT): $(indirect_OBJECTS) $(indirect_DEPENDENCIES)
 	@rm -f indirect$(EXEEXT)
 	$(CXXLINK) $(indirect_LDFLAGS) $(indirect_OBJECTS) $(indirect_LDADD) $(LIBS)
-io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) 
+io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES)
 	@rm -f io$(EXEEXT)
 	$(CXXLINK) $(io_LDFLAGS) $(io_OBJECTS) $(io_LDADD) $(LIBS)
-iter$(EXEEXT): $(iter_OBJECTS) $(iter_DEPENDENCIES) 
+iter$(EXEEXT): $(iter_OBJECTS) $(iter_DEPENDENCIES)
 	@rm -f iter$(EXEEXT)
 	$(CXXLINK) $(iter_LDFLAGS) $(iter_OBJECTS) $(iter_LDADD) $(LIBS)
-matmult$(EXEEXT): $(matmult_OBJECTS) $(matmult_DEPENDENCIES) 
+matmult$(EXEEXT): $(matmult_OBJECTS) $(matmult_DEPENDENCIES)
 	@rm -f matmult$(EXEEXT)
 	$(CXXLINK) $(matmult_LDFLAGS) $(matmult_OBJECTS) $(matmult_LDADD) $(LIBS)
-nested$(EXEEXT): $(nested_OBJECTS) $(nested_DEPENDENCIES) 
+nested$(EXEEXT): $(nested_OBJECTS) $(nested_DEPENDENCIES)
 	@rm -f nested$(EXEEXT)
 	$(CXXLINK) $(nested_LDFLAGS) $(nested_OBJECTS) $(nested_LDADD) $(LIBS)
-numinquire$(EXEEXT): $(numinquire_OBJECTS) $(numinquire_DEPENDENCIES) 
+numinquire$(EXEEXT): $(numinquire_OBJECTS) $(numinquire_DEPENDENCIES)
 	@rm -f numinquire$(EXEEXT)
 	$(CXXLINK) $(numinquire_LDFLAGS) $(numinquire_OBJECTS) $(numinquire_LDADD) $(LIBS)
-outer$(EXEEXT): $(outer_OBJECTS) $(outer_DEPENDENCIES) 
+outer$(EXEEXT): $(outer_OBJECTS) $(outer_DEPENDENCIES)
 	@rm -f outer$(EXEEXT)
 	$(CXXLINK) $(outer_LDFLAGS) $(outer_OBJECTS) $(outer_LDADD) $(LIBS)
-pauli$(EXEEXT): $(pauli_OBJECTS) $(pauli_DEPENDENCIES) 
+pauli$(EXEEXT): $(pauli_OBJECTS) $(pauli_DEPENDENCIES)
 	@rm -f pauli$(EXEEXT)
 	$(CXXLINK) $(pauli_LDFLAGS) $(pauli_OBJECTS) $(pauli_LDADD) $(LIBS)
-pick$(EXEEXT): $(pick_OBJECTS) $(pick_DEPENDENCIES) 
+pick$(EXEEXT): $(pick_OBJECTS) $(pick_DEPENDENCIES)
 	@rm -f pick$(EXEEXT)
 	$(CXXLINK) $(pick_LDFLAGS) $(pick_OBJECTS) $(pick_LDADD) $(LIBS)
-polymorph$(EXEEXT): $(polymorph_OBJECTS) $(polymorph_DEPENDENCIES) 
+polymorph$(EXEEXT): $(polymorph_OBJECTS) $(polymorph_DEPENDENCIES)
 	@rm -f polymorph$(EXEEXT)
 	$(CXXLINK) $(polymorph_LDFLAGS) $(polymorph_OBJECTS) $(polymorph_LDADD) $(LIBS)
-prettyprint$(EXEEXT): $(prettyprint_OBJECTS) $(prettyprint_DEPENDENCIES) 
+prettyprint$(EXEEXT): $(prettyprint_OBJECTS) $(prettyprint_DEPENDENCIES)
 	@rm -f prettyprint$(EXEEXT)
 	$(CXXLINK) $(prettyprint_LDFLAGS) $(prettyprint_OBJECTS) $(prettyprint_LDADD) $(LIBS)
-qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES) 
+qcd$(EXEEXT): $(qcd_OBJECTS) $(qcd_DEPENDENCIES)
 	@rm -f qcd$(EXEEXT)
 	$(CXXLINK) $(qcd_LDFLAGS) $(qcd_OBJECTS) $(qcd_LDADD) $(LIBS)
-rand2$(EXEEXT): $(rand2_OBJECTS) $(rand2_DEPENDENCIES) 
+rand2$(EXEEXT): $(rand2_OBJECTS) $(rand2_DEPENDENCIES)
 	@rm -f rand2$(EXEEXT)
 	$(CXXLINK) $(rand2_LDFLAGS) $(rand2_OBJECTS) $(rand2_LDADD) $(LIBS)
-random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES) 
+random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES)
 	@rm -f random$(EXEEXT)
 	$(CXXLINK) $(random_LDFLAGS) $(random_OBJECTS) $(random_LDADD) $(LIBS)
-rangexpr$(EXEEXT): $(rangexpr_OBJECTS) $(rangexpr_DEPENDENCIES) 
+rangexpr$(EXEEXT): $(rangexpr_OBJECTS) $(rangexpr_DEPENDENCIES)
 	@rm -f rangexpr$(EXEEXT)
 	$(CXXLINK) $(rangexpr_LDFLAGS) $(rangexpr_OBJECTS) $(rangexpr_LDADD) $(LIBS)
-reduce$(EXEEXT): $(reduce_OBJECTS) $(reduce_DEPENDENCIES) 
+reduce$(EXEEXT): $(reduce_OBJECTS) $(reduce_DEPENDENCIES)
 	@rm -f reduce$(EXEEXT)
 	$(CXXLINK) $(reduce_LDFLAGS) $(reduce_OBJECTS) $(reduce_LDADD) $(LIBS)
-simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES) 
+simple$(EXEEXT): $(simple_OBJECTS) $(simple_DEPENDENCIES)
 	@rm -f simple$(EXEEXT)
 	$(CXXLINK) $(simple_LDFLAGS) $(simple_OBJECTS) $(simple_LDADD) $(LIBS)
-slicing$(EXEEXT): $(slicing_OBJECTS) $(slicing_DEPENDENCIES) 
+slicing$(EXEEXT): $(slicing_OBJECTS) $(slicing_DEPENDENCIES)
 	@rm -f slicing$(EXEEXT)
 	$(CXXLINK) $(slicing_LDFLAGS) $(slicing_OBJECTS) $(slicing_LDADD) $(LIBS)
-stencil$(EXEEXT): $(stencil_OBJECTS) $(stencil_DEPENDENCIES) 
+stencil$(EXEEXT): $(stencil_OBJECTS) $(stencil_DEPENDENCIES)
 	@rm -f stencil$(EXEEXT)
 	$(CXXLINK) $(stencil_LDFLAGS) $(stencil_OBJECTS) $(stencil_LDADD) $(LIBS)
-stencil2$(EXEEXT): $(stencil2_OBJECTS) $(stencil2_DEPENDENCIES) 
+stencil2$(EXEEXT): $(stencil2_OBJECTS) $(stencil2_DEPENDENCIES)
 	@rm -f stencil2$(EXEEXT)
 	$(CXXLINK) $(stencil2_LDFLAGS) $(stencil2_OBJECTS) $(stencil2_LDADD) $(LIBS)
-stencil3$(EXEEXT): $(stencil3_OBJECTS) $(stencil3_DEPENDENCIES) 
+stencil3$(EXEEXT): $(stencil3_OBJECTS) $(stencil3_DEPENDENCIES)
 	@rm -f stencil3$(EXEEXT)
 	$(CXXLINK) $(stencil3_LDFLAGS) $(stencil3_OBJECTS) $(stencil3_LDADD) $(LIBS)
-stencilet$(EXEEXT): $(stencilet_OBJECTS) $(stencilet_DEPENDENCIES) 
+stencilet$(EXEEXT): $(stencilet_OBJECTS) $(stencilet_DEPENDENCIES)
 	@rm -f stencilet$(EXEEXT)
 	$(CXXLINK) $(stencilet_LDFLAGS) $(stencilet_OBJECTS) $(stencilet_LDADD) $(LIBS)
-storage$(EXEEXT): $(storage_OBJECTS) $(storage_DEPENDENCIES) 
+storage$(EXEEXT): $(storage_OBJECTS) $(storage_DEPENDENCIES)
 	@rm -f storage$(EXEEXT)
 	$(CXXLINK) $(storage_LDFLAGS) $(storage_OBJECTS) $(storage_LDADD) $(LIBS)
-tiny$(EXEEXT): $(tiny_OBJECTS) $(tiny_DEPENDENCIES) 
+tiny$(EXEEXT): $(tiny_OBJECTS) $(tiny_DEPENDENCIES)
 	@rm -f tiny$(EXEEXT)
 	$(CXXLINK) $(tiny_LDFLAGS) $(tiny_OBJECTS) $(tiny_LDADD) $(LIBS)
-transform$(EXEEXT): $(transform_OBJECTS) $(transform_DEPENDENCIES) 
+transform$(EXEEXT): $(transform_OBJECTS) $(transform_DEPENDENCIES)
 	@rm -f transform$(EXEEXT)
 	$(CXXLINK) $(transform_LDFLAGS) $(transform_OBJECTS) $(transform_LDADD) $(LIBS)
-useret$(EXEEXT): $(useret_OBJECTS) $(useret_DEPENDENCIES) 
+useret$(EXEEXT): $(useret_OBJECTS) $(useret_DEPENDENCIES)
 	@rm -f useret$(EXEEXT)
 	$(CXXLINK) $(useret_LDFLAGS) $(useret_OBJECTS) $(useret_LDADD) $(LIBS)
-where$(EXEEXT): $(where_OBJECTS) $(where_DEPENDENCIES) 
+where$(EXEEXT): $(where_OBJECTS) $(where_DEPENDENCIES)
 	@rm -f where$(EXEEXT)
 	$(CXXLINK) $(where_LDFLAGS) $(where_OBJECTS) $(where_LDADD) $(LIBS)
-whitt$(EXEEXT): $(whitt_OBJECTS) $(whitt_DEPENDENCIES) 
+whitt$(EXEEXT): $(whitt_OBJECTS) $(whitt_DEPENDENCIES)
 	@rm -f whitt$(EXEEXT)
 	$(CXXLINK) $(whitt_LDFLAGS) $(whitt_OBJECTS) $(whitt_LDADD) $(LIBS)
 
