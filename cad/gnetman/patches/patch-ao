$NetBSD: patch-ao,v 1.1.1.1 2004/07/17 23:49:26 dmcmahill Exp $

s/_X/ddrX/g
s/_Y/ddrY/g

to avoid clashes with, for example, the _X defined in 
<ctype.h>

--- src/sch/schddr.h.orig	Mon Dec 29 16:45:59 2003
+++ src/sch/schddr.h
@@ -133,10 +133,10 @@ extern void schCompDestroy(schComp Comp)
 #define schCompSetAngle(Comp, __Angle) ((Comp)->_Angle = (__Angle))
 #define schCompIsSelectable(Comp) ((Comp)->_Selectable)
 #define schCompSetSelectable(Comp, __Selectable) ((Comp)->_Selectable = (__Selectable))
-#define schCompGetY(Comp) ((Comp)->_Y)
-#define schCompSetY(Comp, __Y) ((Comp)->_Y = (__Y))
-#define schCompGetX(Comp) ((Comp)->_X)
-#define schCompSetX(Comp, __X) ((Comp)->_X = (__X))
+#define schCompGetY(Comp) ((Comp)->ddrY)
+#define schCompSetY(Comp, _ddrY) ((Comp)->ddrY = (_ddrY))
+#define schCompGetX(Comp) ((Comp)->ddrX)
+#define schCompSetX(Comp, _ddrX) ((Comp)->ddrX = (_ddrX))
 #define schCompGetfirstPin(Comp) ((Comp)->firstPin)
 #define schCompSetfirstPin(Comp, _Pin) ((Comp)->firstPin = (_Pin))
 extern void schCompInsertPin(schComp Comp, schPin _Pin);
@@ -187,16 +187,16 @@ extern void schMpinDestroy(schMpin Mpin)
 #define schMpinSetLeft(Mpin, __Left) ((Mpin)->_Left = (__Left))
 #define schMpinIsBus(Mpin) ((Mpin)->_Bus)
 #define schMpinSetBus(Mpin, __Bus) ((Mpin)->_Bus = (__Bus))
-#define schMpinGetY2(Mpin) ((Mpin)->_Y2)
-#define schMpinSetY2(Mpin, __Y2) ((Mpin)->_Y2 = (__Y2))
-#define schMpinGetX2(Mpin) ((Mpin)->_X2)
-#define schMpinSetX2(Mpin, __X2) ((Mpin)->_X2 = (__X2))
+#define schMpinGetY2(Mpin) ((Mpin)->ddrY2)
+#define schMpinSetY2(Mpin, _ddrY2) ((Mpin)->ddrY2 = (_ddrY2))
+#define schMpinGetX2(Mpin) ((Mpin)->ddrX2)
+#define schMpinSetX2(Mpin, _ddrX2) ((Mpin)->ddrX2 = (_ddrX2))
 #define schMpinGetSequence(Mpin) ((Mpin)->_Sequence)
 #define schMpinSetSequence(Mpin, __Sequence) ((Mpin)->_Sequence = (__Sequence))
-#define schMpinGetY(Mpin) ((Mpin)->_Y)
-#define schMpinSetY(Mpin, __Y) ((Mpin)->_Y = (__Y))
-#define schMpinGetX(Mpin) ((Mpin)->_X)
-#define schMpinSetX(Mpin, __X) ((Mpin)->_X = (__X))
+#define schMpinGetY(Mpin) ((Mpin)->ddrY)
+#define schMpinSetY(Mpin, _ddrY) ((Mpin)->ddrY = (_ddrY))
+#define schMpinGetX(Mpin) ((Mpin)->ddrX)
+#define schMpinSetX(Mpin, _ddrX) ((Mpin)->ddrX = (_ddrX))
 #define schMpinGetType(Mpin) ((Mpin)->_Type)
 #define schMpinSetType(Mpin, __Type) ((Mpin)->_Type = (__Type))
 #define schMpinGetFlagComp(Mpin) ((Mpin)->_FlagComp)
@@ -404,10 +404,10 @@ extern void schSymbolAppendComp(schSymbo
 extern void schPinDestroy(schPin Pin);
 #define schPinGetPort(Pin) ((Pin)->_Port)
 #define schPinSetPort(Pin, __Port) ((Pin)->_Port = (__Port))
-#define schPinGetY(Pin) ((Pin)->_Y)
-#define schPinSetY(Pin, __Y) ((Pin)->_Y = (__Y))
-#define schPinGetX(Pin) ((Pin)->_X)
-#define schPinSetX(Pin, __X) ((Pin)->_X = (__X))
+#define schPinGetY(Pin) ((Pin)->ddrY)
+#define schPinSetY(Pin, _ddrY) ((Pin)->ddrY = (_ddrY))
+#define schPinGetX(Pin) ((Pin)->ddrX)
+#define schPinSetX(Pin, _ddrX) ((Pin)->ddrX = (_ddrX))
 #define schPinGetComp(Pin) ((Pin)->_Comp)
 #define schPinSetComp(Pin, __Comp) ((Pin)->_Comp = (__Comp))
 #define schPinGetnextCompPin(Pin) ((Pin)->nextCompPin)
@@ -428,14 +428,14 @@ extern void schPinDestroy(schPin Pin);
 extern void schWireDestroy(schWire Wire);
 #define schWireIsBus(Wire) ((Wire)->_Bus)
 #define schWireSetBus(Wire, __Bus) ((Wire)->_Bus = (__Bus))
-#define schWireGetY2(Wire) ((Wire)->_Y2)
-#define schWireSetY2(Wire, __Y2) ((Wire)->_Y2 = (__Y2))
-#define schWireGetX2(Wire) ((Wire)->_X2)
-#define schWireSetX2(Wire, __X2) ((Wire)->_X2 = (__X2))
-#define schWireGetY1(Wire) ((Wire)->_Y1)
-#define schWireSetY1(Wire, __Y1) ((Wire)->_Y1 = (__Y1))
-#define schWireGetX1(Wire) ((Wire)->_X1)
-#define schWireSetX1(Wire, __X1) ((Wire)->_X1 = (__X1))
+#define schWireGetY2(Wire) ((Wire)->ddrY2)
+#define schWireSetY2(Wire, _ddrY2) ((Wire)->ddrY2 = (_ddrY2))
+#define schWireGetX2(Wire) ((Wire)->ddrX2)
+#define schWireSetX2(Wire, _ddrX2) ((Wire)->ddrX2 = (_ddrX2))
+#define schWireGetY1(Wire) ((Wire)->ddrY1)
+#define schWireSetY1(Wire, _ddrY1) ((Wire)->ddrY1 = (_ddrY1))
+#define schWireGetX1(Wire) ((Wire)->ddrX1)
+#define schWireSetX1(Wire, _ddrX1) ((Wire)->ddrX1 = (_ddrX1))
 #define schWireGetfirstRConn(Wire) ((Wire)->firstRConn)
 #define schWireSetfirstRConn(Wire, _RConn) ((Wire)->firstRConn = (_RConn))
 extern void schWireInsertRConn(schWire Wire, schConn _Conn);
@@ -500,10 +500,10 @@ extern void schAttrDestroy(schAttr Attr)
 #define schAttrSetVisible(Attr, __Visible) ((Attr)->_Visible = (__Visible))
 #define schAttrGetValue(Attr) ((Attr)->_Value)
 #define schAttrSetValue(Attr, __Value) ((Attr)->_Value = (__Value))
-#define schAttrGetY(Attr) ((Attr)->_Y)
-#define schAttrSetY(Attr, __Y) ((Attr)->_Y = (__Y))
-#define schAttrGetX(Attr) ((Attr)->_X)
-#define schAttrSetX(Attr, __X) ((Attr)->_X = (__X))
+#define schAttrGetY(Attr) ((Attr)->ddrY)
+#define schAttrSetY(Attr, _ddrY) ((Attr)->ddrY = (_ddrY))
+#define schAttrGetX(Attr) ((Attr)->ddrX)
+#define schAttrSetX(Attr, _ddrX) ((Attr)->ddrX = (_ddrX))
 #define schAttrGetName(Attr) ((Attr)->_Name)
 #define schAttrSetName(Attr, __Name) ((Attr)->_Name = (__Name))
 #define schAttrGetNextAttr(Attr) ((Attr)->_NextAttr)
@@ -516,10 +516,10 @@ extern void schAttrDestroy(schAttr Attr)
 #define schConnAlloc() utNew(struct _schConn)
 #define schConnFree(Conn) utDelete(Conn)
 extern void schConnDestroy(schConn Conn);
-#define schConnGetY(Conn) ((Conn)->_Y)
-#define schConnSetY(Conn, __Y) ((Conn)->_Y = (__Y))
-#define schConnGetX(Conn) ((Conn)->_X)
-#define schConnSetX(Conn, __X) ((Conn)->_X = (__X))
+#define schConnGetY(Conn) ((Conn)->ddrY)
+#define schConnSetY(Conn, _ddrY) ((Conn)->ddrY = (_ddrY))
+#define schConnGetX(Conn) ((Conn)->ddrX)
+#define schConnSetX(Conn, _ddrX) ((Conn)->ddrX = (_ddrX))
 #define schConnGetRWire(Conn) ((Conn)->_RWire)
 #define schConnSetRWire(Conn, __Wire) ((Conn)->_RWire = (__Wire))
 #define schConnGetnextWireRConn(Conn) ((Conn)->nextWireRConn)
@@ -602,14 +602,14 @@ extern void schGraphicRemoveArc(schGraph
 extern void schLineDestroy(schLine Line);
 #define schLineGetColor(Line) ((Line)->_Color)
 #define schLineSetColor(Line, __Color) ((Line)->_Color = (__Color))
-#define schLineGetY2(Line) ((Line)->_Y2)
-#define schLineSetY2(Line, __Y2) ((Line)->_Y2 = (__Y2))
-#define schLineGetX2(Line) ((Line)->_X2)
-#define schLineSetX2(Line, __X2) ((Line)->_X2 = (__X2))
-#define schLineGetY1(Line) ((Line)->_Y1)
-#define schLineSetY1(Line, __Y1) ((Line)->_Y1 = (__Y1))
-#define schLineGetX1(Line) ((Line)->_X1)
-#define schLineSetX1(Line, __X1) ((Line)->_X1 = (__X1))
+#define schLineGetY2(Line) ((Line)->ddrY2)
+#define schLineSetY2(Line, _ddrY2) ((Line)->ddrY2 = (_ddrY2))
+#define schLineGetX2(Line) ((Line)->ddrX2)
+#define schLineSetX2(Line, _ddrX2) ((Line)->ddrX2 = (_ddrX2))
+#define schLineGetY1(Line) ((Line)->ddrY1)
+#define schLineSetY1(Line, _ddrY1) ((Line)->ddrY1 = (_ddrY1))
+#define schLineGetX1(Line) ((Line)->ddrX1)
+#define schLineSetX1(Line, _ddrX1) ((Line)->ddrX1 = (_ddrX1))
 #define schLineGetGraphic(Line) ((Line)->_Graphic)
 #define schLineSetGraphic(Line, __Graphic) ((Line)->_Graphic = (__Graphic))
 #define schLineGetnextGraphicLine(Line) ((Line)->nextGraphicLine)
@@ -642,10 +642,10 @@ extern void schCircleDestroy(schCircle C
 #define schCircleSetColor(Circle, __Color) ((Circle)->_Color = (__Color))
 #define schCircleGetRadius(Circle) ((Circle)->_Radius)
 #define schCircleSetRadius(Circle, __Radius) ((Circle)->_Radius = (__Radius))
-#define schCircleGetY(Circle) ((Circle)->_Y)
-#define schCircleSetY(Circle, __Y) ((Circle)->_Y = (__Y))
-#define schCircleGetX(Circle) ((Circle)->_X)
-#define schCircleSetX(Circle, __X) ((Circle)->_X = (__X))
+#define schCircleGetY(Circle) ((Circle)->ddrY)
+#define schCircleSetY(Circle, _ddrY) ((Circle)->ddrY = (_ddrY))
+#define schCircleGetX(Circle) ((Circle)->ddrX)
+#define schCircleSetX(Circle, _ddrX) ((Circle)->ddrX = (_ddrX))
 #define schCircleGetGraphic(Circle) ((Circle)->_Graphic)
 #define schCircleSetGraphic(Circle, __Graphic) ((Circle)->_Graphic = (__Graphic))
 #define schCircleGetnextGraphicCircle(Circle) ((Circle)->nextGraphicCircle)
@@ -666,10 +666,10 @@ extern void schArcDestroy(schArc Arc);
 #define schArcSetStartAngle(Arc, __StartAngle) ((Arc)->_StartAngle = (__StartAngle))
 #define schArcGetRadius(Arc) ((Arc)->_Radius)
 #define schArcSetRadius(Arc, __Radius) ((Arc)->_Radius = (__Radius))
-#define schArcGetY(Arc) ((Arc)->_Y)
-#define schArcSetY(Arc, __Y) ((Arc)->_Y = (__Y))
-#define schArcGetX(Arc) ((Arc)->_X)
-#define schArcSetX(Arc, __X) ((Arc)->_X = (__X))
+#define schArcGetY(Arc) ((Arc)->ddrY)
+#define schArcSetY(Arc, _ddrY) ((Arc)->ddrY = (_ddrY))
+#define schArcGetX(Arc) ((Arc)->ddrX)
+#define schArcSetX(Arc, _ddrX) ((Arc)->ddrX = (_ddrX))
 #define schArcGetGraphic(Arc) ((Arc)->_Graphic)
 #define schArcSetGraphic(Arc, __Graphic) ((Arc)->_Graphic = (__Graphic))
 #define schArcGetnextGraphicArc(Arc) ((Arc)->nextGraphicArc)
@@ -739,8 +739,8 @@ struct _schComp {
     dbInst _Inst;
     utSym _SymbolName;
     U16 _Angle;
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     schPin firstPin;
     schPin lastPin;
     schAttr _Attr;
@@ -760,11 +760,11 @@ struct _schMpin {
     dbMport _Mport;
     U32 _Right;
     U32 _Left;
-    S32 _Y2;
-    S32 _X2;
+    S32 ddrY2;
+    S32 ddrX2;
     U32 _Sequence;
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     dbMportType _Type;
     schComp _FlagComp;
     schAttr _Attr;
@@ -808,8 +808,8 @@ struct _schSymbol {
 
 struct _schPin {
     dbPort _Port;
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     schComp _Comp;
     schPin nextCompPin;
     schMpin _Mpin;
@@ -818,10 +818,10 @@ struct _schPin {
 };
 
 struct _schWire {
-    S32 _Y2;
-    S32 _X2;
-    S32 _Y1;
-    S32 _X1;
+    S32 ddrY2;
+    S32 ddrX2;
+    S32 ddrY1;
+    S32 ddrX1;
     schConn firstRConn;
     schConn firstLConn;
     schAttr _Attr;
@@ -839,8 +839,8 @@ struct _schAttr {
     U8 _Size;
     U8 _Color;
     utSym _Value;
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     utSym _Name;
     schAttr _NextAttr;
     bool _ShowValue:2;
@@ -849,8 +849,8 @@ struct _schAttr {
 };
 
 struct _schConn {
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     schWire _RWire;
     schConn nextWireRConn;
     schWire _LWire;
@@ -866,10 +866,10 @@ struct _schGraphic {
 
 struct _schLine {
     U8 _Color;
-    S32 _Y2;
-    S32 _X2;
-    S32 _Y1;
-    S32 _X1;
+    S32 ddrY2;
+    S32 ddrX2;
+    S32 ddrY1;
+    S32 ddrX1;
     schGraphic _Graphic;
     schLine nextGraphicLine;
 };
@@ -884,8 +884,8 @@ struct _schRect {
 struct _schCircle {
     U8 _Color;
     U32 _Radius;
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     schGraphic _Graphic;
     schCircle nextGraphicCircle;
 };
@@ -895,8 +895,8 @@ struct _schArc {
     U8 _EndAngle;
     U8 _StartAngle;
     U32 _Radius;
-    S32 _Y;
-    S32 _X;
+    S32 ddrY;
+    S32 ddrX;
     schGraphic _Graphic;
     schArc nextGraphicArc;
 };
