$NetBSD: patch-ar,v 1.1.1.1 2001/04/27 15:27:32 agc Exp $

--- movem.c.orig	Fri Jun 19 13:55:34 1992
+++ movem.c	Sat Jan 13 20:33:43 2001
@@ -10,6 +10,7 @@
  *	mmove(x,y,xd,yd)	
  *		Function to actually perform the monster movement
  */
+#include <stdlib.h>
 #include "header.h"
 #include "sphere.h"
 #include "monst.h"
@@ -26,7 +27,7 @@
  */
 static short w1[9],w1x[9],w1y[9];
 static int tmp1,tmp2,tmp3,tmp4,distance;
-movemonst()
+void movemonst(void)
 {
 	int i,j;
 
@@ -115,7 +116,7 @@
  */
 static int tmpitem,xl,xh,yl,yh;
 
-movemt(i,j)
+void movemt(i,j)
 int i,j;
 {
 	int k,m,z,tmp,xtmp,ytmp,monst;
@@ -294,7 +295,7 @@
  *	Enter with the from coordinates in (x,y) and the destination coordinates
  *	in (xd,yd).
  */
-mmove(aa,bb,cc,dd)
+void mmove(aa,bb,cc,dd)
 int aa,bb,cc,dd;
 {
 	int tmp,it,i,x,flag;
@@ -372,10 +373,10 @@
 		hitp[cc][dd]=1;
 
 	if (tmp==LEMMING) {
-		/* 10% chance moving a lemming creates a new lemming
+		/* 1% chance moving a lemming creates a new lemming
 		** in the old spot
 		*/
-		if (rnd(100)<=9) {
+		if (rnd(100)==1) {
 			mitem[aa][bb].mon = LEMMING;
 			know[aa][bb]=1;
 		}
@@ -398,7 +399,7 @@
 		case OEMERALD: 
 		case OSAPPHIRE:
 			if (mitem[cc][dd].n < 6) {
-				char n = mitem[cc][dd].n++;
+				int n = mitem[cc][dd].n++;
 		    		mitem[cc][dd].it[n].item = item[cc][dd];
 		    		mitem[cc][dd].it[n].itemarg = iarg[cc][dd];
 			}
@@ -481,7 +482,7 @@
 		show1cell(cc,dd);
 }
 
-teleportmonst (xx, yy, monst)
+void teleportmonst (xx, yy, monst)
 int xx, yy, monst;
 {
 	int i, x,y,trys;
